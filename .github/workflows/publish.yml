name: Publish JS SDK

on:
  workflow_dispatch: # Keep manual trigger
  release:
    types: [published] # Trigger when a GitHub Release is published

env:
  DOCS_REPO: SAP/ai-sdk
  DOCS_CHECKOUT_PATH: .ai-sdk-docs
  NODE_VERSION: 20

jobs:
  prepare-release-notes:
    name: Prepare Release Notes
    runs-on: ubuntu-latest
    outputs:
      pr_url: ${{ steps.open_pr.outputs.pr_url }}
    steps:
      - name: Checkout current repository
        uses: sap/ai-sdk-js/.github/actions/setup@main
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Checkout Docs Repo
        uses: actions/checkout@v4
        with:
          repository: ${{ env.DOCS_REPO }}
          token: ${{ secrets.BOT_SDK_JS_FOR_DOCS_REPO_PR }}
          path: ${{ env.DOCS_CHECKOUT_PATH }}
          fetch-depth: 0

      - name: Update release notes file
        id: update-notes
        run: |
          NODE_OPTIONS="--loader ts-node/esm" pnpm ts-node --esm scripts/execute-add-changelog.ts

      - name: Open Release notes PR
        id: open_pr
        working-directory: ${{ env.DOCS_CHECKOUT_PATH }}
        run: |
          git config --local user.email "cloudsdk@sap.com"
          git config --local user.name "SAP Cloud SDK Bot"
          BRANCH_NAME="update-release-notes-${{ github.run_id }}" 
          git checkout -b "${BRANCH_NAME}"
          git add docs-js/release-notes.mdx 
          if git diff --staged --quiet; then
            echo "No changes to commit."
            # Output an empty pr_url if no changes
            echo "pr_url=" >> "$GITHUB_OUTPUT" 
          else
            git commit -m "update release notes" -a
            git push -u origin "${BRANCH_NAME}"

            echo ${{ secrets.BOT_SDK_JS_FOR_DOCS_REPO_PR }} | gh auth login --hostname github.com --with-token
            gh config set prompt disabled
            PR_BODY="Auto-created by update release notes workflow."
            PR_TITLE="Update JS Release Notes"
            PR_URL=$(gh pr create --head "${BRANCH_NAME}" --title "${PR_TITLE}" --body "${PR_BODY}") 
            
            if [ -z "$PR_URL" ]; then
              echo "Failed to create PR or no PR URL returned."
              # Output an empty pr_url on failure
              echo "pr_url=" >> "$GITHUB_OUTPUT" 
            else
              echo "Created PR: $PR_URL"
              # Export the URL as a step output
              echo "pr_url=$PR_URL" >> "$GITHUB_OUTPUT"
            fi
          fi

  publish-npm:
    name: Publish to NPM
    needs: [prepare-release-notes]
    runs-on: ubuntu-latest
    steps:
      - uses: sap/ai-sdk-js/.github/actions/setup@main
        with:
          node-version: ${{ env.NODE_VERSION }}
    #   - name: publish
    #     run: |
    #       pnpm changeset publish # Use pnpm here too if publishing
    #     env:
    #       NODE_AUTH_TOKEN: ${{ secrets.NPMJS_ACCESS_TOKEN }}

  merge-release-notes-pr:
    name: Merge Release Notes PR
    needs: [prepare-release-notes, publish-npm]
    runs-on: ubuntu-latest
    steps:
      - name: Merge PR
        if: needs.prepare-release-notes.outputs.pr_url != ''
        run: |
          echo "Attempting to merge PR: ${{ needs.prepare-release-notes.outputs.pr_url }}"
          echo ${{ secrets.BOT_SDK_JS_FOR_DOCS_REPO_PR }} | gh auth login --hostname github.com --with-token
          gh config set prompt disabled
          gh pr merge "${{ needs.prepare-release-notes.outputs.pr_url }}" --auto --squash --delete-branch 
          echo "Auto-merge enabled on the PR successfully."
