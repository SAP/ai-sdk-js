openapi: 3.0.0
info:
  title: Grounding
  version: 0.1.0
  description: Grounding is a service designed to handle data-related tasks, such as grounding and retrieval, using vector databases. It provides specialized data retrieval through these databases, grounding the retrieval process with your own external and context-relevant data. Grounding combines generative AI capabilities with the ability to use real-time, precise data to improve decision-making and business operations for specific AI-driven business solutions.
  contact:
    name: SAP AI Core
x-sap-shortText: Enhance content generation with additional capabilities for business AI scenarios.
externalDocs:
  description: Documentation for SAP AI Core - Grounding
  url: https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/grounding
tags:
  - name: Pipelines
    description: Tag for pipelines component
  - name: Vector
    description: Tag for vector component
  - name: Retrieval
    description: Tag for retrieval component
servers:
  - url: 'https://api.ai.{region}.ml.hana.ondemand.com/v2/lm/{service}'
    description: Production endpoint for SAP AI Core
    variables:
      region:
        enum:
          - prod.eu-central-1.aws
          - prodeuonly.eu-central-1.aws
          - prod.us-east-1.aws
          - prod.ap-northeast-1.aws
          - prod.ap-southeast-2.aws
          - prod-eu20.westeurope.azure
          - prod-eu30.europe-west3.gcp
          - prod-us21.eastus.azure
          - prod-us30.us-central1.gcp
          - prod-ap20.australiaeast.az
          - prod-ap11.ap-southeast-1.aws
        default: prod.eu-central-1.aws
      service:
        default: document-grounding
paths:
  '/pipelines':
    post:
      tags:
        - Pipelines
      operationId: pipeline.v1.pipeline_endpoints.create_pipeline
      summary: Pipeline Creation
      description: 'Create a pipeline'
      x-sap-cloud-sdk-operation-name: createPipeline
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createPipeline'
      responses:
        '201':
          description: Returns pipelineId on successful creation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/pipelineId'
        '400':
          $ref: '#/components/responses/BadRequest'
    get:
      tags:
        - Pipelines
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/count'
      operationId: pipeline.v1.pipeline_endpoints.get_all_pipeline
      summary: Get Pipelines
      description: 'Get all pipelines'
      x-sap-cloud-sdk-operation-name: getAllPipelines
      responses:
        '200':
          description: Returns all pipelines for the tenant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPipelines'
        '400':
          $ref: '#/components/responses/BadRequest'
  '/pipelines/{pipelineId}':
    get:
      tags:
        - Pipelines
      operationId: pipeline.v1.pipeline_endpoints.get_pipeline_by_id
      summary: Get details of a Pipeline
      description: 'Get details of a pipeline by pipeline id'
      x-sap-cloud-sdk-operation-name: getPipelineById
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: pipelineId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the pipeline to get.
      responses:
        '200':
          description: Returns the pipeline for an pipelineId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPipeline'
        '400':
          $ref: '#/components/responses/BadRequest'
    delete:
      tags:
        - Pipelines
      operationId: pipeline.v1.pipeline_endpoints.delete_pipeline_by_id
      summary: Delete pipeline
      description: 'Delete a pipeline by pipeline id'
      x-sap-cloud-sdk-operation-name: deletePipelineById
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: pipelineId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the pipeline to delete.
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
  '/pipelines/{pipelineId}/status':
    get:
      tags:
        - Pipelines
      operationId: pipeline.v1.pipeline_endpoints.get_pipeline_status
      summary: Get status of Pipeline
      description: 'Get pipeline status by pipeline id'
      x-sap-cloud-sdk-operation-name: getPipelineStatus
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: pipelineId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the pipeline to get status.
      responses:
        '200':
          description: Returns the pipeline status for an pipelineId.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPipelineStatus'
        '400':
          $ref: '#/components/responses/BadRequest'

  ### ###  ###  Pipeline Status API   ###  ###
  ### ###  #########################  ###  ###
  '/pipelines/{pipelineId}/executions':
    get:
      tags:
        - Pipelines
      operationId: pipeline.v1.pipeline_endpoints.get_pipeline_executions
      summary: Get Pipeline Executions
      description: Retrieve all executions for a specific pipeline. Optionally, filter to get only the last execution.
      x-sap-cloud-sdk-operation-name: getAllExecutionsForPipeline
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: pipelineId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the pipeline
        - name: lastExecution
          in: query
          required: false
          schema:
            type: boolean
          description: Filter to get the last execution
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/count'
      responses:
        '200':
          description: Returns all executions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPipelineExecutions'

  '/pipelines/{pipelineId}/executions/{executionId}':
    get:
      tags:
        - Pipelines
      operationId: pipeline.v1.pipeline_endpoints.get_pipeline_execution_by_id
      summary: Get Pipeline Execution by ID
      description: Retrieve details of a specific pipeline execution by its execution ID.
      x-sap-cloud-sdk-operation-name: getExecutionDetailsByIdForPipelineExecution
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: pipelineId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the pipeline
        - name: executionId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the execution
      responses:
        '200':
          description: Returns a response to execution id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getPipelineExecutionById'

  '/pipelines/{pipelineId}/executions/{executionId}/documents':
    get:
      tags:
        - Pipelines
      operationId: pipeline.v1.pipeline_endpoints.get_pipeline_execution_documents
      summary: Get Documents for a Pipeline Execution
      description: Retrieve all documents associated with a specific pipeline execution. Optionally, filter the results using query parameters.
      x-sap-cloud-sdk-operation-name: getDocumentsForPipelineExecution
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: pipelineId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the pipeline
        - name: executionId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the execution
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/count'
      responses:
        '200':
          description: Returns a response to execution id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsStatusResponse'

  '/pipelines/{pipelineId}/executions/{executionId}/documents/{documentId}':
    get:
      tags:
        - Pipelines
      operationId: pipeline.v1.pipeline_endpoints.get_pipeline_execution_document_by_id
      summary: Get Document by ID for a Pipeline Execution
      description: Retrieve details of a specific document associated with a pipeline execution.
      x-sap-cloud-sdk-operation-name: getDocumentByIdForPipelineExecution
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: pipelineId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the pipeline
        - name: executionId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the execution
        - name: documentId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the document to get.
      responses:
        '200':
          description: Returns a response to execution id and document id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDocumentResponse'

  '/pipelines/{pipelineId}/documents':
    get:
      tags:
        - Pipelines
      operationId: pipeline.v1.pipeline_endpoints.get_pipeline_documents
      summary: Get Documents for a Pipeline
      description: Retrieve all documents associated with a specific pipeline. Optionally, filter the results using query parameters.
      x-sap-cloud-sdk-operation-name: getAllDocumentsForPipeline
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: pipelineId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the pipeline to get.
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/count'
      responses:
        '200':
          description: Returns all documents for a pipeline.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsStatusResponse'

  '/pipelines/{pipelineId}/documents/{documentId}':
    get:
      tags:
        - Pipelines
      operationId: pipeline.v1.pipeline_endpoints.get_pipeline_document_by_id
      summary: Get Document by ID for a Pipeline
      description: Retrieve details of a specific document associated with a pipeline.
      x-sap-cloud-sdk-operation-name: getDocumentByIdForPipeline
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: pipelineId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the pipeline to get.
        - name: documentId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the document to get.
      responses:
        '200':
          description: Returns a response to document id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PipelineDocumentResponse'

  '/vector/collections':
    get:
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/count'
      tags:
        - Vector
      summary: Get collections
      description: Gets a list of collections.
      operationId: vector.v1.vector_endpoints.get_all_collections
      x-sap-cloud-sdk-operation-name: getAllCollections
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
    post:
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
      tags:
        - Vector
      summary: Create collection
      description: Creates a collection. This operation is asynchronous. Poll the collection resource and check the status field to understand creation status.
      operationId: vector.v1.vector_endpoints.create_collection
      x-sap-cloud-sdk-operation-name: createCollection
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionRequest'
        required: true
      responses:
        '202':
          description: Successful Response
          headers:
            Location:
              description: The newly created collections monitor url
              schema:
                type: string
                format: uri

        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/vector/collections/{collectionId}':
    get:
      tags:
        - Vector
      summary: Get collection by ID
      description: Gets a specific collection by ID.
      operationId: vector.v1.vector_endpoints.get_collection_by_id
      x-sap-cloud-sdk-operation-name: getCollectionById
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: collectionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Collectionid
          description: Collection ID
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Collection'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      tags:
        - Vector
      summary: Delete collection by ID
      description: Deletes a specific collection by ID. This operation is asynchronous. Poll the collection for a 404 status code.
      operationId: vector.v1.vector_endpoints.delete_collection
      x-sap-cloud-sdk-operation-name: deleteCollectionById
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: collectionId
          in: path
          required: true
          schema:
            type: string
            title: Collectionid
          description: Collection ID
      responses:
        '202':
          description: Successful Response
          headers:
            Location:
              description: The deleted collections monitor url
              schema:
                type: string
                format: uri
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/vector/collections/{collectionId}/documents/{documentId}':
    get:
      tags:
        - Vector
      summary: Get document by ID
      description: Gets a specific document in a collection by ID.
      operationId: vector.v1.vector_endpoints.get_document_by_id
      x-sap-cloud-sdk-operation-name: getDocumentById
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: collectionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Collectionid
          description: Collection ID
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Documentid
          description: Document ID
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    delete:
      tags:
        - Vector
      summary: Delete a document
      description: Deletes a specific document of a collection.
      operationId: vector.v1.vector_endpoints.delete_document
      x-sap-cloud-sdk-operation-name: deleteDocumentById
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: collectionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Collectionid
          description: Collection ID
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Documentid
          description: Document ID
      responses:
        '204':
          description: Successful Response
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/vector/collections/{collectionId}/documents':
    get:
      tags:
        - Vector
      summary: Get documents
      description: Gets a list of documents of a collection.
      operationId: vector.v1.vector_endpoints.get_all_documents
      x-sap-cloud-sdk-operation-name: getAllDocuments
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: collectionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Collectionid
          description: Collection ID
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/count'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Documents'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    post:
      tags:
        - Vector
      summary: Create documents in collection
      description: Create and stores one or multiple documents into a collection. If omitted, 'id' will be auto-generated.
      operationId: vector.v1.vector_endpoints.create_documents
      x-sap-cloud-sdk-operation-name: createDocuments
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: collectionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Collectionid
          description: Collection ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreateRequest'
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
    patch:
      tags:
        - Vector
      summary: Upsert documents in collection
      description: Upserts the data of multiple documents into a collection.
      operationId: vector.v1.vector_endpoints.update_documents
      x-sap-cloud-sdk-operation-name: updateDocuments
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: collectionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Collectionid
          description: Collection ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUpdateRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsListResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/vector/search':
    post:
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
      tags:
        - Vector
      summary: Search chunk by vector
      description: Search chunks
      operationId: vector.v1.vector_endpoints.search_chunk
      x-sap-cloud-sdk-operation-name: search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextSearchRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResults'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/vector/collections/{id}/creationStatus':
    get:
      tags:
        - Vector
      summary: Get collection status by ID
      description: Gets a specific collection status from monitor by ID.
      operationId: vector.v1.vector_endpoints.get_collection_creation_status
      x-sap-cloud-sdk-operation-name: getCollectionCreationStatus
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: ID
          description: Collection ID
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CollectionCreatedResponse'
                  - $ref: '#/components/schemas/CollectionPendingResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/vector/collections/{id}/deletionStatus':
    get:
      tags:
        - Vector
      summary: Get collection status by ID
      description: Gets a specific collection status from monitor by ID.
      operationId: vector.v1.vector_endpoints.get_collection_deletion_status
      x-sap-cloud-sdk-operation-name: getCollectionDeletionStatus
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Id
          description: Collection ID
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/CollectionDeletedResponse'
                  - $ref: '#/components/schemas/CollectionPendingResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
  '/retrieval/dataRepositories':
    get:
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - $ref: '#/components/parameters/top'
        - $ref: '#/components/parameters/skip'
        - $ref: '#/components/parameters/count'
      tags:
        - Retrieval
      summary: List all DataRepository objects.
      description: List all Data Repositories
      operationId: retrieval.v1.retrieval_endpoints.get_data_repositories
      x-sap-cloud-sdk-operation-name: getDataRepositories
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataRepositories'
        '400':
          $ref: '#/components/responses/BadRequest'
  '/retrieval/dataRepositories/{repositoryId}':
    get:
      tags:
        - Retrieval
      summary: List single DataRepository object.
      description: List data repository by id
      operationId: retrieval.v1.retrieval_endpoints.get_data_repository
      x-sap-cloud-sdk-operation-name: getDataRepositoryById
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
        - name: repositoryId
          in: path
          required: true
          schema:
            type: string
            format: uuid
            title: Repositoryid
          description: Repository ID
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataRepository'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '404':
          $ref: '#/components/responses/NotFound'
  '/retrieval/search':
    post:
      parameters:
        - in: header
          name: AI-Resource-Group
          required: true
          schema:
            type: string
          description: Resource Group ID
      tags:
        - Retrieval
      summary: Retrieve relevant content
      description: Retrieve relevant content given a query string.
      operationId: retrieval.v1.retrieval_endpoints.search
      x-sap-cloud-sdk-operation-name: search
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetrievalSearchInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetrievalSearchResults'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'

components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description: OAuth client credentials (client ID and secret) are required. These can be requested from SAP BTP cloud cockpit.
      flows:
        clientCredentials:
          tokenUrl: https://(subdomain_identity_zone).authentication.(host)/oauth/token
          scopes: {}
  schemas:
    createPipeline:
      oneOf:
        - $ref: '#/components/schemas/MSSharePointPipelineCreateRequest'
        - $ref: '#/components/schemas/S3PipelineCreateRequest'
        - $ref: '#/components/schemas/SFTPPipelineCreateRequest'
      discriminator:
        propertyName: type
        mapping:
          MSSharePoint: '#/components/schemas/MSSharePointPipelineCreateRequest'
          S3: '#/components/schemas/S3PipelineCreateRequest'
          SFTP: '#/components/schemas/SFTPPipelineCreateRequest'

    MSSharePointPipelineCreateRequest:
      type: object
      required:
        - type
        - configuration
      properties:
        type:
          type: string
          enum: [MSSharePoint]
        configuration:
          $ref: '#/components/schemas/MSSharePointConfiguration'
        metadata:
          $ref: '#/components/schemas/MetaData'
      additionalProperties: true

    S3PipelineCreateRequest:
      type: object
      required:
        - type
        - configuration
      properties:
        type:
          type: string
          enum: [S3]
        configuration:
          $ref: '#/components/schemas/CommonConfiguration'
        metadata:
          $ref: '#/components/schemas/MetaData'
      additionalProperties: true

    SFTPPipelineCreateRequest:
      type: object
      required:
        - type
        - configuration
      properties:
        type:
          type: string
          enum: [SFTP]
        configuration:
          $ref: '#/components/schemas/CommonConfiguration'
        metadata:
          $ref: '#/components/schemas/MetaData'
      additionalProperties: true

    MSSharePointConfiguration:
      type: object
      required:
        - destination
        - sharePoint
      properties:
        destination:
          type: string
          example: generic-secret-name
        sharePoint:
          $ref: '#/components/schemas/SharePointConfig'
      additionalProperties: true

    SharePointConfig:
      type: object
      required:
        - site
      properties:
        site:
          $ref: '#/components/schemas/SharePointSite'
      additionalProperties: true

    SharePointSite:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          example: sharepoint-site-name
        includePaths:
          type: array
          items:
            type: string
          example:
            - /testFolder1
            - /testFolder2
      additionalProperties: true

    CommonConfiguration:
      type: object
      required:
        - destination
      properties:
        destination:
          type: string
          example: generic-secret-name
      additionalProperties: true

    MetaData:
      type: object
      required:
        - destination
      properties:
        destination:
          type: string
          example: destination-name
      additionalProperties: true

    getPipelines:
      type: object
      required:
        - resources
      properties:
        count:
          type: integer
        resources:
          type: array
          items:
            $ref: '#/components/schemas/getPipeline'

    getPipeline:
      oneOf:
        - $ref: '#/components/schemas/MSSharePointPipelineGetResponse'
        - $ref: '#/components/schemas/S3PipelineGetResponse'
        - $ref: '#/components/schemas/SFTPPipelineGetResponse'
      discriminator:
        propertyName: type
        mapping:
          MSSharePoint: '#/components/schemas/MSSharePointPipelineGetResponse'
          S3: '#/components/schemas/S3PipelineGetResponse'
          SFTP: '#/components/schemas/SFTPPipelineGetResponse'

    MSSharePointPipelineGetResponse:
      allOf:
        - $ref: '#/components/schemas/BasePipelineResponse'
        - type: object
          required:
            - configuration
          properties:
            type:
              type: string
              enum: [MSSharePoint]
            configuration:
              $ref: '#/components/schemas/MSSharePointConfigurationGetResponse'

    S3PipelineGetResponse:
      allOf:
        - $ref: '#/components/schemas/BasePipelineResponse'
        - type: object
          required:
            - configuration
          properties:
            type:
              type: string
              enum: [S3]
            configuration:
              $ref: '#/components/schemas/CommonConfiguration'

    SFTPPipelineGetResponse:
      allOf:
        - $ref: '#/components/schemas/BasePipelineResponse'
        - type: object
          required:
            - configuration
          properties:
            type:
              type: string
              enum: [SFTP]
            configuration:
              $ref: '#/components/schemas/CommonConfiguration'

    BasePipelineResponse:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
        type:
          type: string
        metadata:
          $ref: '#/components/schemas/MetaData'

    MSSharePointConfigurationGetResponse:
      type: object
      required:
        - destination
        # - sharePoint # Commented out this required field due to an issue on the document grounding side, where the attribute is sent as 'sharepoint' in the response. This should be uncommented once the issue is resolved on the DG side.
      properties:
        destination:
          type: string
        sharePoint:
          $ref: '#/components/schemas/SharePointConfigGetResponse'

    SharePointConfigGetResponse:
      type: object
      required:
        - site
      properties:
        site:
          $ref: '#/components/schemas/SharePointSiteGetResponse'

    SharePointSiteGetResponse:
      type: object
      required:
        - name
      properties:
        id:
          type: string
        name:
          type: string
        includePaths:
          type: array
          items:
            type: string

    getPipelineStatus:
      type: object
      properties:
        lastStarted:
          type: string
          pattern: '^$|^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}(?:\.\d{3})?Z$'
          example: '2024-02-15T12:45:00.000Z'
        status:
          $ref: '#/components/schemas/PipelineExecutionStatus'

    pipelineId:
      type: object
      properties:
        pipelineId:
          type: string
          example: uuid

    PipelineExecutionStatus:
      type: string
      enum:
        - NEW
        - UNKNOWN
        - INPROGRESS
        - FINISHED
        - FINISHEDWITHERRORS
        - TIMEOUT
      example: 'INPROGRESS'

    PipelineExecutionData:
      type: object
      properties:
        id:
          type: string
          example: uuid
        status:
          $ref: '#/components/schemas/PipelineExecutionStatus'

    getPipelineExecutions:
      type: object
      properties:
        count:
          type: integer
          example: 2
        resources:
          type: array
          items:
            $ref: '#/components/schemas/PipelineExecutionData'

    getPipelineExecutionById:
      type: object
      properties:
        id:
          type: string
          example: uuid
        createdAt:
          type: string
          example: '2024-02-15T12:45:00Z' # UTC
        modifiedAt:
          type: string
          example: '2024-02-15T12:45:00Z' # UTC
        status:
          $ref: '#/components/schemas/PipelineExecutionStatus'

    DocumentStatus:
      type: string
      enum:
        - TO_BE_PROCESSED
        - INDEXED
        - REINDEXED
        - DEINDEXED
        - FAILED
        - FAILED_TO_BE_RETRIED
      example: 'INDEXED'

    DocumentsStatusResponse:
      type: object
      properties:
        count:
          type: integer
          example: 1
        resources:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: uuid
              status:
                $ref: '#/components/schemas/DocumentStatus'

    PipelineDocumentResponse:
      type: object
      properties:
        id:
          type: string
          example: uuid
        viewLocation:
          type: string
          example: 'location'
          nullable: true
        downloadLocation:
          type: string
          example: 'location'
          nullable: true
        lastUpdatedTimestamp:
          type: string
          example: '2024-02-15T12:45:00Z'
        status:
          $ref: '#/components/schemas/DocumentStatus'

    Chunk:
      properties:
        id:
          type: string
          title: Id
        content:
          type: string
          title: Content
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/KeyValueListPair'
          title: Metadata
          default: []
      type: object
      required:
        - id
        - content
      title: Chunk
    DocumentKeyValueListPair:
      properties:
        key:
          type: string
          maxLength: 1024
          title: Key
        value:
          type: array
          items:
            type: string
            maxLength: 1024
          title: Value
        matchMode:
          type: string
          nullable: true
          title: MatchMode
          description: Default match mode for search filters
          default: ANY
          anyOf:
            - enum:
                - ANY
                - ALL
            - {}
      type: object
      required:
        - key
        - value
      title: DocumentKeyValueListPair
    HTTPValidationError:
      properties:
        detail:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
      type: object
      title: HTTPValidationError
    KeyValueListPair:
      properties:
        key:
          type: string
          maxLength: 1024
          title: Key
        value:
          type: array
          items:
            type: string
            maxLength: 1024
          title: Value
      type: object
      required:
        - key
        - value
      title: KeyValueListPair
    Document-Output:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        metadata:
          items:
            $ref: '#/components/schemas/DocumentKeyValueListPair'
          type: array
          title: Metadata
          default: []
        chunks:
          items:
            $ref: '#/components/schemas/Chunk'
          type: array
          title: Chunks
      type: object
      required:
        - id
        - chunks
      title: Document
    DocumentsChunk:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        title:
          type: string
          title: Title
        metadata:
          items:
            $ref: '#/components/schemas/KeyValueListPair'
          type: array
          title: Metadata
          default: []
        documents:
          items:
            $ref: '#/components/schemas/Document-Output'
          type: array
          title: Documents
      type: object
      required:
        - id
        - title
        - documents
      title: Collection
    PerFilterSearchResult:
      properties:
        filterId:
          type: string
          title: Filterid
        results:
          items:
            $ref: '#/components/schemas/DocumentsChunk'
          type: array
          title: Results
      type: object
      required:
        - filterId
        - results
      title: PerFilterSearchResult
    SearchConfiguration:
      properties:
        maxChunkCount:
          nullable: true
          type: integer
          minimum: 0
          maximum: 0
          exclusiveMinimum: true
          title: Maxchunkcount
          description: Maximum number of chunks to be returned. Cannot be used with 'maxDocumentCount'.
        maxDocumentCount:
          nullable: true
          type: integer
          minimum: 0
          maximum: 0
          exclusiveMinimum: true
          title: Maxdocumentcount
          description: "[Only supports 'vector' dataRepositoryType] - Maximum number of documents to be returned. Cannot be used with 'maxChunkCount'. If maxDocumentCount is given, then only one chunk per document is returned."
      type: object
      title: SearchConfiguration
    SearchDocumentKeyValueListPair:
      properties:
        key:
          type: string
          maxLength: 1024
          title: Key
        value:
          type: array
          items:
            type: string
            maxLength: 1024
          title: Value
        selectMode:
          type: array
          items:
            $ref: '#/components/schemas/SearchSelectOptionEnum'
          title: Selectmode
          description: Select mode for search filters
      type: object
      required:
        - key
        - value
      title: SearchDocumentKeyValueListPair
    SearchResults:
      properties:
        results:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/PerFilterSearchResult'
          title: Results
          description: List of returned results.
      type: object
      required:
        - results
      title: SearchResults

    CollectionsListResponse:
      properties:
        count:
          type: integer
        resources:
          items:
            $ref: '#/components/schemas/Collection'
          type: array
          title: Collections
      type: object
      required:
        - resources
      title: CollectionsListResponse
      description: A response containing collections retrieved from the server.
    CollectionRequest:
      properties:
        title:
          type: string
          nullable: true
          title: Title
        embeddingConfig:
          $ref: '#/components/schemas/EmbeddingConfig'
        metadata:
          items:
            $ref: '#/components/schemas/KeyValueListPair'
          type: array
          title: Metadata
          description: >-
            Metadata attached to collection. Useful to restrict search to a
            subset of collections.
          default: []
      type: object
      required:
        - embeddingConfig
      title: CollectionRequest
      description: A request for creating a new, single collection.
    CollectionCreatedResponse:
      properties:
        collectionURL:
          type: string
          title: Collectionurl
        status:
          type: string
          title: Status
      type: object
      required:
        - collectionURL
        - status
      title: CollectionCreatedResponse
    CollectionPendingResponse:
      properties:
        Location:
          type: string
          title: Location
        status:
          type: string
          title: Status
      type: object
      required:
        - Location
        - status
      title: CollectionPendingResponse
    CollectionDeletedResponse:
      properties:
        collectionURL:
          type: string
          title: Collectionurl
        status:
          type: string
          title: Status
      type: object
      required:
        - collectionURL
        - status
      title: CollectionDeletedResponse
    BaseDocument:
      properties:
        chunks:
          items:
            $ref: '#/components/schemas/TextOnlyBaseChunk'
          type: array
          title: Chunks
        metadata:
          items:
            $ref: '#/components/schemas/DocumentKeyValueListPair'
          type: array
          title: Metadata
      type: object
      required:
        - chunks
        - metadata
      title: BaseDocument
      description: Base class for documents, document requests and responses.
    DocumentCreateRequest:
      properties:
        documents:
          items:
            $ref: '#/components/schemas/BaseDocument'
          type: array
          title: Documents
      type: object
      required:
        - documents
      title: DocumentCreateRequest
      description: >-
        A create request containing one or more new documents to create and
        store in a collection.
    Document-Input:
      properties:
        chunks:
          items:
            $ref: '#/components/schemas/TextOnlyBaseChunk'
          type: array
          title: Chunks
        metadata:
          items:
            $ref: '#/components/schemas/DocumentKeyValueListPair'
          type: array
          title: Metadata
        id:
          type: string
          format: uuid
          title: Id
          description: Unique identifier of a document.
      type: object
      required:
        - chunks
        - metadata
        - id
      title: Document
      description: A single document stored in a collection by ID.
    DocumentUpdateRequest:
      properties:
        documents:
          items:
            $ref: '#/components/schemas/Document-Input'
          type: array
          title: Documents
      type: object
      required:
        - documents
      title: DocumentUpdateRequest
      description: >-
        An update request containing one or more documents to update existing
        documents in a collection by ID.
    DocumentWithoutChunks:
      properties:
        metadata:
          items:
            $ref: '#/components/schemas/DocumentKeyValueListPair'
          type: array
          title: Metadata
        id:
          type: string
          format: uuid
          title: Id
          description: Unique identifier of a document.
      type: object
      required:
        - metadata
        - id
      title: DocumentWithoutChunks
      description: >-
        A single document stored in a collection by ID without exposing its
        chunks.
    DocumentsListResponse:
      properties:
        documents:
          items:
            $ref: '#/components/schemas/DocumentWithoutChunks'
          type: array
          title: Documents
      type: object
      required:
        - documents
      title: Documents
      description: A response containing documents created or updated, retrieved from the server.
    Documents:
      properties:
        count:
          type: integer
        resources:
          items:
            $ref: '#/components/schemas/DocumentWithoutChunks'
          type: array
          title: Documents
      type: object
      required:
        - resources
      title: Documents
      description: A response containing documents retrieved from the server.
    TextOnlyBaseChunk:
      properties:
        content:
          type: string
          title: Content
        metadata:
          items:
            $ref: '#/components/schemas/KeyValueListPair'
          type: array
          title: Metadata
      type: object
      required:
        - content
        - metadata
      title: TextOnlyBaseChunk
    DocumentResponse:
      properties:
        chunks:
          items:
            $ref: '#/components/schemas/TextOnlyBaseChunk'
          type: array
          title: Chunks
        metadata:
          items:
            $ref: '#/components/schemas/DocumentKeyValueListPair'
          type: array
          title: Metadata
        id:
          type: string
          format: uuid
          title: Id
          description: Unique identifier of a document.
      type: object
      required:
        - chunks
        - metadata
        - id
      title: DocumentResponse
      description: >-
        A response containing information about a newly created, single
        document.
    SearchSelectOptionEnum:
      type: string
      anyOf:
        - enum:
            - ignoreIfKeyAbsent
        - {}
      default: ignoreIfKeyAbsent
      title: SearchSelectOptionEnum
    SearchFilter:
      properties:
        id:
          type: string
          title: Id
          description: Identifier of this SearchFilter - unique per request.
        collectionIds:
          items:
            type: string
          type: array
          title: Collectionids
        configuration:
          $ref: '#/components/schemas/SearchConfiguration'
        collectionMetadata:
          items:
            $ref: '#/components/schemas/KeyValueListPair'
          type: array
          maxItems: 2000
          title: Collectionmetadata
          description: >-
            Restrict collections considered during search to those annotated
            with the given metadata. Useful when combined with collections=['*']
          default: []
        documentMetadata:
          items:
            $ref: '#/components/schemas/SearchDocumentKeyValueListPair'
          type: array
          maxItems: 2000
          title: Documentmetadata
          description: >-
            Restrict documents considered during search to those annotated with
            the given metadata.
          default: []
        chunkMetadata:
          items:
            $ref: '#/components/schemas/KeyValueListPair'
          type: array
          maxItems: 2000
          title: Chunkmetadata
          description: >-
            Restrict chunks considered during search to those with the given
            metadata.
          default: []
      type: object
      required:
        - id
        - collectionIds
        - configuration
      title: SearchFilter
    TextSearchRequest:
      properties:
        query:
          type: string
          maxLength: 2000
          minLength: 1
          title: Query
          description: Query string
        filters:
          items:
            $ref: '#/components/schemas/SearchFilter'
          type: array
          title: Filters
      type: object
      required:
        - query
        - filters
      title: TextSearchRequest
    EmbeddingConfig:
      properties:
        modelName:
          type: string
          maxLength: 1024
          title: Modelname
          default: text-embedding-ada-002
      type: object
      title: EmbeddingConfig
    Collection:
      properties:
        title:
          type: string
          nullable: true
          title: Title
        embeddingConfig:
          $ref: '#/components/schemas/EmbeddingConfig'
        metadata:
          items:
            $ref: '#/components/schemas/KeyValueListPair'
          type: array
          title: Metadata
          description: >-
            Metadata attached to collection. Useful to restrict search to a
            subset of collections.
          default: []
        id:
          type: string
          format: uuid
          title: Id
          description: Unique identifier of a collection.
      type: object
      required:
        - embeddingConfig
        - id
      title: Collection
      description: A logical grouping of content.
    DataRepositories:
      properties:
        count:
          type: integer
        resources:
          type: array
          items:
            $ref: '#/components/schemas/DataRepository'
          title: Datarepositories
      type: object
      required:
        - resources
      title: DataRepositories
    DataRepository:
      properties:
        id:
          type: string
          format: uuid
          title: Id
          description: Unique identifier of this DataRepository.
        title:
          type: string
          title: Title
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/KeyValueListPair'
          title: Metadata
          description: Metadata attached to DataRepository. Useful to later limit search to a subset of DataRepositories.
          default: []
        type:
          $ref: '#/components/schemas/DataRepositoryType'
      type: object
      required:
        - id
        - title
        - type
      title: DataRepository
      description: DataRepository schema expected by Retrieval.
    DataRepositorySearchResult:
      properties:
        dataRepository:
          $ref: '#/components/schemas/DataRepositoryWithDocuments'
      type: object
      required:
        - dataRepository
      title: DataRepositorySearchResult
    DataRepositoryType:
      type: string
      anyOf:
        - enum:
            - vector
            - help.sap.com
        - {}
      title: DataRepositoryType
    DataRepositoryWithDocuments:
      properties:
        id:
          type: string
          format: uuid
          title: Id
          description: Unique identifier of this DataRepository.
        title:
          type: string
          title: Title
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/KeyValueListPair'
          title: Metadata
          description: Metadata attached to DataRepository. Useful to later limit search to a subset of DataRepositories.
        documents:
          type: array
          items:
            $ref: '#/components/schemas/Document'
          title: Documents
      type: object
      required:
        - id
        - title
        - documents
      title: DataRepositoryWithDocuments
      description: DataRepository schema returned by the Vector search endpoint
    Document:
      properties:
        id:
          type: string
          title: Id
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/DocumentKeyValueListPair'
          title: Metadata
          default: []
        chunks:
          type: array
          items:
            $ref: '#/components/schemas/Chunk'
          title: Chunks
      type: object
      required:
        - id
        - chunks
      title: Document
    DataRepositoryPerFilterSearchResult:
      properties:
        filterId:
          type: string
          title: Filterid
        results:
          type: array
          items:
            $ref: '#/components/schemas/DataRepositorySearchResult'
          title: Results
          description: List of returned results.
          default: []
      type: object
      required:
        - filterId
      title: PerFilterSearchResult
    PerFilterSearchResultError:
      properties:
        message:
          type: string
          title: Message
      type: object
      required:
        - message
      title: PerFilterSearchResultError
    PerFilterSearchResultWithError:
      properties:
        filterId:
          type: string
          title: Filterid
        error:
          $ref: '#/components/schemas/PerFilterSearchResultError'
          description: Error message if any.
          default:
            message: Unknown Error Occurred
      type: object
      required:
        - filterId
      title: PerFilterSearchResultWithError
    RetrievalSearchFilter:
      properties:
        id:
          type: string
          title: Id
          description: Identifier of this SearchFilter - unique per request.
        searchConfiguration:
          type: object
          nullable: true
          $ref: '#/components/schemas/SearchConfiguration'
          default: {}
          minProperties: 0
          maxProperties: 2
        dataRepositories:
          type: array
          items:
            type: string
          title: Datarepositories
          description: Specify ['*'] to search across all DataRepositories or give a specific list of DataRepository ids.
          default:
            - '*'
        dataRepositoryType:
          type: string
          $ref: '#/components/schemas/DataRepositoryType'
          description: Only include DataRepositories with the given type.
        dataRepositoryMetadata:
          type: array
          items:
            $ref: '#/components/schemas/KeyValueListPair'
          title: Datarepositorymetadata
          description: Restrict DataRepositories considered during search to those annotated with the given metadata. Useful when combined with dataRepositories=['*']
          default: []
        documentMetadata:
          type: array
          items:
            $ref: '#/components/schemas/SearchDocumentKeyValueListPair'
          title: Documentmetadata
          description: Restrict documents considered during search to those annotated with the given metadata.
          default: []
        chunkMetadata:
          type: array
          items:
            $ref: '#/components/schemas/KeyValueListPair'
          title: Chunkmetadata
          description: Restrict chunks considered during search to those with the given metadata.
          default: []
      type: object
      required:
        - id
        - dataRepositoryType
      title: SearchFilter
      description: Limit scope of search to certain DataRepositories, Documents or Chunks.
    RetrievalSearchInput:
      properties:
        query:
          type: string
          minLength: 1
          title: Query
          description: Query string
        filters:
          type: array
          items:
            $ref: '#/components/schemas/RetrievalSearchFilter'
          title: Filters
      type: object
      required:
        - query
        - filters
      title: SearchInput
    RetrievalDataRepositorySearchResult:
      properties:
        dataRepository:
          $ref: '#/components/schemas/DataRepositoryWithDocuments'
      type: object
      required:
        - dataRepository
      title: DataRepositorySearchResult
    RetrievalPerFilterSearchResult:
      properties:
        filterId:
          type: string
          title: Filterid
        results:
          type: array
          items:
            $ref: '#/components/schemas/RetrievalDataRepositorySearchResult'
          title: Results
          description: List of returned results.
          default: []
      type: object
      required:
        - filterId
      title: PerFilterSearchResult
    RetrievalPerFilterSearchResultWithError:
      properties:
        message:
          type: string
          title: Message
      type: object
      required:
        - message
      title: PerFilterSearchResultError
    RetrievalSearchResults:
      properties:
        results:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/RetrievalPerFilterSearchResult'
              - $ref: '#/components/schemas/RetrievalPerFilterSearchResultWithError'
          title: Results
          description: List of returned results.
      type: object
      required:
        - results
      title: SearchResults
    DataRepositorySearchResults:
      properties:
        results:
          type: array
          items:
            anyOf:
              - $ref: '#/components/schemas/DataRepositoryPerFilterSearchResult'
              - $ref: '#/components/schemas/PerFilterSearchResultWithError'
          title: Results
          description: List of returned results.
      type: object
      required:
        - results
      title: SearchResults
    ValidationError:
      properties:
        loc:
          type: array
          items:
            type: string
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError

    ### ###  ########################  ### ###
    ### ###  ###       Error      ###  ### ###
    ### ###  ########################  ### ###

    ApiError:
      required:
        - code
        - message
      type: object
      properties:
        code:
          description: >-
            Descriptive error code (not http status code).
          type: string
        message:
          description: plaintext error description
          type: string
        requestId:
          description: id of individual request
          type: string
        target:
          description: url that has been called
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/DetailsErrorResponse'

    DetailsErrorResponse:
      type: object
      properties:
        code:
          description: Descriptive error code (not http status code)
          type: string
        message:
          description: Plaintext error description
          type: string

  ### ***  *****************************************************  *** ###
  ### ***  ***              Start of responses               ***  *** ###
  ### ***  *****************************************************  *** ###

  responses:
    BadRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/ApiError'
      description: The specification of the resource was incorrect

    NotFound:
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/ApiError'
      description: The specification of the resource was incorrect

    UnprocessableEntity:
      description: There are validation issues with the data.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/ApiError'

  parameters:
    top:
      name: $top
      description: Number of results to display
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
      example: 10

    skip:
      name: $skip
      description: Number of results to be skipped from the ordered list of results
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
      example: 10

    count:
      name: $count
      description: When the $count field is set to false, the response contains a count of the items present in the response. When the $count field is set to true, the response contains a count of all the items present on the server, and not just the ones in the response. When the $count field is not passed, it is false by default.
      in: query
      required: false
      schema:
        type: boolean
      example: true
