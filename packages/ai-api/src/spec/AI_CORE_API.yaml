openapi: 3.0.0
info:
  title: AI Core
  description:
    "Provides tools to manage your scenarios and workflows in SAP AI Core.
    Execute pipelines as a batch job, for example to pre-process or train your models,
    or perform batch inference.  Serve inference requests of trained models. Deploy
    Ð° trained machine learning model as a web service to serve inference requests
    with high performance.  Register your own Docker registry, synchronize your AI
    content from your own git repository, and register your own object store for training
    data and trained models.\n"
  version: 2.34.0
x-sap-shortText:
  Create and manage AI scenarios, trainings, deployments, and artifacts
  in SAP AI Core.
servers:
  - url: https://api.ai.{region}.ml.hana.ondemand.com/v2
    description: Production endpoint for SAP AI Core
    variables:
      region:
        enum:
          - prod.eu-central-1.aws
          - prodeuonly.eu-central-1.aws
          - prod.us-east-1.aws
          - prod.ap-northeast-1.aws
          - prod.ap-southeast-2.aws
          - prod-eu20.westeurope.azure
          - prod-us21.eastus.azure
          - prod-eu30.europe-west3.gcp
          - prod-us30.us-central1.gcp
        default: prod.eu-central-1
externalDocs:
  description: Documentation for SAP AI Core
  url: https://help.sap.com/docs/AI_CORE?version=CLOUD
security:
  - Oauth2: []
tags:
  - name: Scenario
    description: Access to scenarios
  - name: Executable
    description: Access to executables
  - name: Configuration
    description: Access to configurations for executions and deployments
  - name: Deployment
    description: Access to deployments
  - name: Execution
    description: Access to executions
  - name: Artifact
    description: Access to artifacts, e.g. datasets and models
  - name: Docker Registry Secret
    description: Access to dockerRegistrySecrets
  - name: Metrics
    description: Access metrics of training runs
  - name: KPI
    description: Access to usage information for a tenant
  - name: Object Store Secret
    description: Access to objectStoreSecrets
  - name: Secret
    description: Access to generic secrets
  - name: Meta
    description: Metadata about API provider and capabilities
  - name: Execution Schedule
    description: Access to executionSchedules
paths:
  /lm/artifacts:
    parameters:
      - $ref: '#/components/parameters/AiresourceGroupHeader'
    post:
      tags:
        - Artifact
      summary: Register artifact
      description:
        Register an artifact for use in a configuration, for example a
        model or a dataset.
      operationId: artifact.create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiArtifactPostData'
      responses:
        '201':
          description: The artifact has been registered successfully
          headers:
            Location:
              description: URL of the registered artifact
              schema:
                $ref: '#/components/schemas/AiUrl'
            Content-Location:
              description:
                URL of the registered artifact. This header is deprecated.
                Location header shall be used instead.
              deprecated: true
              schema:
                $ref: '#/components/schemas/AiUrl'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiArtifactCreationResponse'
        '400':
          $ref: '#/components/responses/AiBadRequest'
    get:
      tags:
        - Artifact
      summary: Get list of artifacts
      description:
        'Retrieve a list of artifacts that matches the specified filter
        criteria.

        Filter criteria include scenario ID, execution ID, an artifact name, artifact
        kind, or artifact labels.

        Use top/skip parameters to paginate the result list.

        Search by substring of artifact name or description, if required.

        '
      operationId: artifact.query
      parameters:
        - $ref: '#/components/parameters/AiqueryScenarioId'
        - $ref: '#/components/parameters/AiqueryExecutionId'
        - $ref: '#/components/parameters/AiqueryArtifactName'
        - $ref: '#/components/parameters/AiqueryArtifactKind'
        - $ref: '#/components/parameters/AiartifactLabelSelector'
        - $ref: '#/components/parameters/Aitop'
        - $ref: '#/components/parameters/Aiskip'
        - $ref: '#/components/parameters/AiquerySearch'
        - $ref: '#/components/parameters/AiquerySearchCaseInsensitive'
        - $ref: '#/components/parameters/AiqueryArtifactExpand'
      responses:
        '200':
          description: A list of artifacts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiArtifactList'
        '400':
          $ref: '#/components/responses/AiBadRequest'
  /lm/artifacts/{artifactId}:
    parameters:
      - $ref: '#/components/parameters/AiresourceGroupHeader'
      - $ref: '#/components/parameters/AiartifactId'
      - $ref: '#/components/parameters/AiqueryArtifactExpand'
    get:
      tags:
        - Artifact
      summary: Get artifact by ID
      description: Retrieve details for artifact with artifactId.
      operationId: artifact.get
      responses:
        '200':
          description: An artifact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiArtifact'
        '400':
          $ref: '#/components/responses/AiBadRequest'
        '404':
          $ref: '#/components/responses/AiNotFound'
  /lm/configurations:
    parameters:
      - $ref: '#/components/parameters/AiresourceGroupHeader'
    get:
      tags:
        - Configuration
      summary: Get list of configurations
      description:
        'Retrieve a list of configurations. Filter results by scenario
        ID or a list of executable IDs.

        Search for configurations containing the search string as substring in the
        configuration name.

        '
      operationId: configuration.query
      parameters:
        - $ref: '#/components/parameters/AiqueryScenarioId'
        - $ref: '#/components/parameters/Aitop'
        - $ref: '#/components/parameters/Aiskip'
        - $ref: '#/components/parameters/AiexecutableIdsList'
        - $ref: '#/components/parameters/AiquerySearch'
        - $ref: '#/components/parameters/AiquerySearchCaseInsensitive'
        - $ref: '#/components/parameters/AiqueryConfigurationExpand'
      responses:
        '200':
          description: A list of configurations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiConfigurationList'
        '400':
          $ref: '#/components/responses/AiBadRequest'
    post:
      tags:
        - Configuration
      summary: Create configuration
      description:
        'Create a new configuration linked to a specific scenario and executable
        for use in an execution

        or deployment.

        '
      operationId: configuration.create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiConfigurationBaseData'
      responses:
        '201':
          description: The created configuration
          headers:
            Location:
              description: URL of the created configuration
              schema:
                $ref: '#/components/schemas/AiUrl'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiConfigurationCreationResponse'
        '400':
          $ref: '#/components/responses/AiBadRequest'
  /lm/configurations/{configurationId}:
    parameters:
      - $ref: '#/components/parameters/AiresourceGroupHeader'
      - $ref: '#/components/parameters/AiconfigurationId'
      - $ref: '#/components/parameters/AiqueryConfigurationExpand'
    get:
      tags:
        - Configuration
      summary: Get configuration by ID
      description: Retrieve details for configuration with configurationId.
      operationId: configuration.get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiConfiguration'
          description: A configuration
        '400':
          $ref: '#/components/responses/AiBadRequest'
        '404':
          $ref: '#/components/responses/AiNotFound'
  /lm/deployments:
    parameters:
      - $ref: '#/components/parameters/AiresourceGroupHeader'
    get:
      tags:
        - Deployment
      summary: Get list of deployments
      description:
        'Retrieve a list of deployments that match the specified filter
        criteria.

        Filter criteria include a list of executableIds, a scenarioId, a configurationId,
        or a deployment status.

        With top/skip parameters it is possible to paginate the result list.

        With select parameter it is possible to select only status.

        '
      operationId: deployment.query
      parameters:
        - $ref: '#/components/parameters/AiexecutableIdsList'
        - $ref: '#/components/parameters/AiqueryConfigurationId'
        - $ref: '#/components/parameters/AiqueryScenarioId'
        - $ref: '#/components/parameters/Aistatus'
        - $ref: '#/components/parameters/Aitop'
        - $ref: '#/components/parameters/Aiskip'
        - $ref: '#/components/parameters/Aiselect'
      responses:
        '200':
          description: A list of deployments
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiDeploymentList'
        '400':
          $ref: '#/components/responses/AiBadRequest'
    post:
      tags:
        - Deployment
      summary: Create deployment
      description:
        'Create a deployment using the configuration specified by configurationId
        after synchronously checking the

        correctness of the configuration.

        '
      operationId: deployment.create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiDeploymentCreationRequest'
      responses:
        '202':
          description: The deployment has been scheduled successfully
          headers:
            Location:
              description: URL of the scheduled deployment
              schema:
                $ref: '#/components/schemas/AiUrl'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiDeploymentCreationResponse'
        '400':
          $ref: '#/components/responses/AiBadRequest'
    patch:
      tags:
        - Deployment
      summary: Patch multiple deployments
      description:
        Update status of multiple deployments. stop or delete multiple
        deployments.
      operationId: deployment.batch_modify
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AiDeploymentBulkModificationRequest'
        required: true
      responses:
        '202':
          description: The modification of the deployments have been scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiDeploymentBulkModificationResponse'
        '400':
          $ref: '#/components/responses/AiBadRequest'
  /lm/deployments/{deploymentId}:
    parameters:
      - $ref: '#/components/parameters/AiresourceGroupHeader'
      - $ref: '#/components/parameters/AideploymentId'
    get:
      tags:
        - Deployment
      summary: Get information about specific deployment
      description: Retrieve details for execution with deploymentId.
      operationId: deployment.get
      parameters:
        - $ref: '#/components/parameters/Aiselect'
      responses:
        '200':
          description: Information about the deployment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiDeploymentResponseWithDetails'
        '400':
          $ref: '#/components/responses/AiBadRequest'
        '404':
          $ref: '#/components/responses/AiNotFound'
    patch:
      tags:
        - Deployment
      summary: Update target status or configuration of a deployment
      description:
        'Update target status of a deployment to stop a deployment or change
        the configuration to be used by the

        deployment after synchronously checking the correctness of the configuration.
        A change of configuration is only

        allowed for RUNNING and PENDING deployments.

        '
      operationId: deployment.modify
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiDeploymentModificationRequest'
      responses:
        '202':
          description: The modification of the deployment has been scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiDeploymentModificationResponse'
        '400':
          $ref: '#/components/responses/AiBadRequest'
        '404':
          $ref: '#/components/responses/AiNotFound'
        '412':
          $ref: '#/components/responses/AiPreconditionFailed'
    delete:
      tags:
        - Deployment
      summary: Mark deployment as deleted
      description: Mark deployment with deploymentId as deleted.
      operationId: deployment.delete
      responses:
        '202':
          description: The deletion of the deployment has been scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiDeploymentDeletionResponse'
        '400':
          $ref: '#/components/responses/AiBadRequest'
        '404':
          $ref: '#/components/responses/AiNotFound'
        '412':
          $ref: '#/components/responses/AiPreconditionFailed'
  /lm/executions:
    parameters:
      - $ref: '#/components/parameters/AiresourceGroupHeader'
    get:
      tags:
        - Execution
      summary: Get list of executions
      description:
        'Retrieve a list of executions that match the specified filter
        criteria.

        Filter criteria include a list of executableIds, a scenarioId, a configurationId,
        or a execution status.

        With top/skip parameters it is possible to paginate the result list.

        With select parameter it is possible to select only status.

        '
      operationId: execution.query
      parameters:
        - $ref: '#/components/parameters/AiexecutableIdsList'
        - $ref: '#/components/parameters/AiqueryConfigurationId'
        - $ref: '#/components/parameters/AiqueryScenarioId'
        - $ref: '#/components/parameters/AiqueryExecutionScheduleId'
        - $ref: '#/components/parameters/Aistatus'
        - $ref: '#/components/parameters/Aitop'
        - $ref: '#/components/parameters/Aiskip'
        - $ref: '#/components/parameters/Aiselect'
      responses:
        '200':
          description: A list of executions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiExecutionList'
        '400':
          $ref: '#/components/responses/AiBadRequest'
    post:
      tags:
        - Execution
      summary: Create execution
      description: Create an execution using the configuration specified by configurationId.
      operationId: execution.create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiEnactmentCreationRequest'
      responses:
        '202':
          description: The execution has been scheduled successfully
          headers:
            Location:
              description: URL of the scheduled execution
              schema:
                $ref: '#/components/schemas/AiUrl'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiExecutionCreationResponse'
        '400':
          $ref: '#/components/responses/AiBadRequest'
    patch:
      tags:
        - Execution
      summary: Patch multiple executions
      description: Patch multiple executions' status to stopped or deleted.
      operationId: execution.batch_modify
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/AiExecutionBulkModificationRequest'
        required: true
      responses:
        '202':
          description: The modification of the executions have been scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiExecutionBulkModificationResponse'
        '400':
          $ref: '#/components/responses/AiBadRequest'
  /lm/executions/{executionId}:
    parameters:
      - $ref: '#/components/parameters/AiresourceGroupHeader'
      - $ref: '#/components/parameters/AiexecutionId'
    get:
      tags:
        - Execution
      summary: Get information about a specific execution
      description: Retrieve details for execution with executionId.
      operationId: execution.get
      parameters:
        - $ref: '#/components/parameters/Aiselect'
      responses:
        '200':
          description: Information about the execution
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiExecutionResponseWithDetails'
        '400':
          $ref: '#/components/responses/AiBadRequest'
        '404':
          $ref: '#/components/responses/AiNotFound'
    patch:
      tags:
        - Execution
      summary: Update target status of an execution
      description: Update target status of the execution to stop an execution.
      operationId: execution.modify
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiExecutionModificationRequest'
      responses:
        '202':
          description: The modification of the execution has been scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiExecutionModificationResponse'
        '400':
          $ref: '#/components/responses/AiBadRequest'
        '404':
          $ref: '#/components/responses/AiNotFound'
        '412':
          $ref: '#/components/responses/AiPreconditionFailed'
    delete:
      tags:
        - Execution
      summary: Mark execution as deleted
      description: Mark the execution with executionId as deleted.
      operationId: execution.delete
      responses:
        '202':
          description: The deletion of the execution has been scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiExecutionDeletionResponse'
        '400':
          $ref: '#/components/responses/AiBadRequest'
        '404':
          $ref: '#/components/responses/AiNotFound'
        '412':
          $ref: '#/components/responses/AiPreconditionFailed'
  /lm/executionSchedules:
    parameters:
      - $ref: '#/components/parameters/AiresourceGroupHeader'
    get:
      tags:
        - Execution Schedule
      summary: Get list of execution schedules
      description:
        'Retrieve a list of execution schedules that match the specified
        filter criteria.

        Filter criteria include executionScheduleStatus or a configurationId.

        With top/skip parameters it is possible to paginate the result list.

        '
      operationId: execution_schedule.query
      parameters:
        - $ref: '#/components/parameters/AiqueryConfigurationId'
        - $ref: '#/components/parameters/AiqueryExecutionScheduleStatus'
        - $ref: '#/components/parameters/Aitop'
        - $ref: '#/components/parameters/Aiskip'
      responses:
        '200':
          description: A list of execution schedules
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiExecutionScheduleList'
        '400':
          $ref: '#/components/responses/AiBadRequest'
    post:
      tags:
        - Execution Schedule
      summary: Create execution schedule
      description:
        Create an execution schedule using the configuration specified
        by configurationId, and schedule.
      operationId: execution_schedule.create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiExecutionScheduleCreationData'
      responses:
        '202':
          description: The execution schedule has been created successfully
          headers:
            Location:
              description: URL of the execution schedule
              schema:
                $ref: '#/components/schemas/AiUrl'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiExecutionScheduleCreationResponse'
        '400':
          $ref: '#/components/responses/AiBadRequest'
  /lm/executionSchedules/{executionScheduleId}:
    parameters:
      - $ref: '#/components/parameters/AiresourceGroupHeader'
      - $ref: '#/components/parameters/AiexecutionScheduleId'
    get:
      tags:
        - Execution Schedule
      summary: Get information about an execution schedule
      description: Retrieve details for execution schedule with executionScheduleId.
      operationId: execution_schedule.get
      responses:
        '200':
          description: Information about the execution schedule
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiExecutionSchedule'
        '400':
          $ref: '#/components/responses/AiBadRequest'
        '404':
          $ref: '#/components/responses/AiNotFound'
    patch:
      tags:
        - Execution Schedule
      summary: Update an execution schedule
      description: Update details of an execution schedule
      operationId: execution_schedule.modify
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiExecutionScheduleModificationRequest'
      responses:
        '202':
          description: The execution schedule has been modified successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiExecutionScheduleModificationResponse'
        '400':
          $ref: '#/components/responses/AiBadRequest'
        '404':
          $ref: '#/components/responses/AiNotFound'
    delete:
      tags:
        - Execution Schedule
      summary: Delete execution schedule
      description: Delete the execution schedule with executionScheduleId.
      operationId: execution_schedule.delete
      responses:
        '202':
          description: The execution schedule has been deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiExecutionScheduleDeletionResponse'
        '400':
          $ref: '#/components/responses/AiBadRequest'
        '404':
          $ref: '#/components/responses/AiNotFound'
  /lm/scenarios:
    parameters:
      - $ref: '#/components/parameters/AiresourceGroupHeader'
    get:
      tags:
        - Scenario
      summary: Get list of scenarios
      description: Retrieve a list of all available scenarios.
      operationId: scenario.query
      responses:
        '200':
          description: A list of scenarios
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiScenarioList'
  /lm/scenarios/{scenarioId}:
    parameters:
      - $ref: '#/components/parameters/AiresourceGroupHeader'
      - $ref: '#/components/parameters/AiscenarioId'
    get:
      tags:
        - Scenario
      summary: Get scenario by id
      description: Retrieve details for a scenario specified by scenarioId.
      operationId: scenario.get
      responses:
        '200':
          description: A scenario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiScenario'
        '400':
          $ref: '#/components/responses/AiBadRequest'
        '404':
          $ref: '#/components/responses/AiNotFound'
  /lm/scenarios/{scenarioId}/executables:
    parameters:
      - $ref: '#/components/parameters/AiscenarioId'
      - $ref: '#/components/parameters/AiresourceGroupHeader'
    get:
      tags:
        - Executable
      summary: Get list of executables
      description:
        'Retrieve a list of executables for a scenario. Filter by version
        ID, if required.

        '
      operationId: executable.query
      parameters:
        - $ref: '#/components/parameters/AiversionIdQueryParam'
      responses:
        '200':
          description: A list of executables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiExecutableList'
        '400':
          $ref: '#/components/responses/AiBadRequest'
  /lm/scenarios/{scenarioId}/executables/{executableId}:
    parameters:
      - $ref: '#/components/parameters/AiscenarioId'
      - $ref: '#/components/parameters/AiexecutableId'
      - $ref: '#/components/parameters/AiresourceGroupHeader'
    get:
      tags:
        - Executable
      summary: Get details about specific executable
      description:
        'Retrieve details about an executable identified by executableId
        belonging

        to a scenario identified by scenarioId.

        '
      operationId: executable.get
      responses:
        '200':
          description: An Executable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiExecutable'
        '400':
          $ref: '#/components/responses/AiBadRequest'
        '404':
          $ref: '#/components/responses/AiNotFound'
  /lm/scenarios/{scenarioId}/versions:
    parameters:
      - $ref: '#/components/parameters/AiresourceGroupHeader'
      - $ref: '#/components/parameters/AiscenarioId'
      - $ref: '#/components/parameters/AilabelSelector'
    get:
      tags:
        - Scenario
      summary: Get list of versions for scenario
      description:
        'Retrieve a list of scenario versions based on the versions of
        executables

        available within that scenario.

        '
      operationId: scenario.query_versions
      responses:
        '200':
          description: A list of versions for the scenario
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiVersionList'
        '400':
          $ref: '#/components/responses/AiBadRequest'
  /lm/scenarios/{scenarioId}/models:
    parameters:
      - $ref: '#/components/parameters/AiscenarioId'
      - $ref: '#/components/parameters/AiresourceGroupHeader'
    get:
      tags:
        - Scenario
      summary: Get information about all models available in LLM global scenario
      description: Retrieve information about all models available in LLM global scenario
      operationId: models.get
      responses:
        '200':
          description:
            The request was successful and information of all LLM models
            will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AiModelList'
        '400':
          $ref: '#/components/responses/AiBadRequest'
  /lm/artifacts/$count:
    get:
      tags:
        - Artifact
      summary: Get number of artifacts
      description:
        'Retrieve  the number of available artifacts that match the specified
        filter criteria.

        Filter criteria include a scenarioId, executionId, an artifact name, artifact
        kind, or artifact labels.

        Search by substring of artifact name or description is also possible.

        '
      operationId: artifact.count
      parameters:
        - $ref: '#/components/parameters/AiresourceGroupHeader'
        - $ref: '#/components/parameters/AiqueryScenarioId'
        - $ref: '#/components/parameters/AiqueryExecutionId'
        - $ref: '#/components/parameters/AiqueryArtifactName'
        - $ref: '#/components/parameters/AiqueryArtifactKind'
        - $ref: '#/components/parameters/AiquerySearch'
        - $ref: '#/components/parameters/AiquerySearchCaseInsensitive'
        - $ref: '#/components/parameters/AiartifactLabelSelector'
      responses:
        '200':
          description: Number of artifacts
          content:
            text/plain:
              schema:
                type: integer
        '400':
          $ref: '#/components/responses/AiBadRequest'
  /lm/configurations/$count:
    get:
      tags:
        - Configuration
      summary: Get number of configurations
      description:
        'Retrieve the number of available configurations that match the
        specified filter criteria.

        Filter criteria include a scenarioId or executableIdsList. Search by substring
        of configuration name is also possible.

        '
      operationId: configuration.count
      parameters:
        - $ref: '#/components/parameters/AiresourceGroupHeader'
        - $ref: '#/components/parameters/AiqueryScenarioId'
        - $ref: '#/components/parameters/AiquerySearch'
        - $ref: '#/components/parameters/AiquerySearchCaseInsensitive'
        - $ref: '#/components/parameters/AiexecutableIdsList'
      responses:
        '200':
          description: Number of configurations
          content:
            text/plain:
              schema:
                type: integer
        '400':
          $ref: '#/components/responses/AiBadRequest'
  /lm/executions/$count:
    get:
      tags:
        - Execution
      summary: Get number of executions
      description:
        'Retrieve the number of available executions. The number can be
        filtered by

        scenarioId, configurationId, executableIdsList or by execution status.

        '
      operationId: execution.count
      parameters:
        - $ref: '#/components/parameters/AiresourceGroupHeader'
        - $ref: '#/components/parameters/AiexecutableIdsList'
        - $ref: '#/components/parameters/AiqueryConfigurationId'
        - $ref: '#/components/parameters/AiqueryScenarioId'
        - $ref: '#/components/parameters/AiqueryExecutionScheduleId'
        - $ref: '#/components/parameters/Aistatus'
      responses:
        '200':
          description: Number of executions
          content:
            text/plain:
              schema:
                type: integer
        '400':
          $ref: '#/components/responses/AiBadRequest'
  /lm/deployments/$count:
    get:
      tags:
        - Deployment
      summary: Get number of deployments
      description:
        'Retrieve the number of available deployments. The number can be
        filtered by

        scenarioId, configurationId, executableIdsList or by deployment status.

        '
      operationId: deployment.count
      parameters:
        - $ref: '#/components/parameters/AiresourceGroupHeader'
        - $ref: '#/components/parameters/AiexecutableIdsList'
        - $ref: '#/components/parameters/AiqueryConfigurationId'
        - $ref: '#/components/parameters/AiqueryScenarioId'
        - $ref: '#/components/parameters/Aistatus'
      responses:
        '200':
          description: Number of deployments
          content:
            text/plain:
              schema:
                type: integer
        '400':
          $ref: '#/components/responses/AiBadRequest'
  /lm/executionSchedules/$count:
    get:
      tags:
        - Execution Schedule
      summary: Get number of execution schedules
      description:
        'Retrieve the number of scheduled executions. The number can be
        filtered by

        configurationId or executionScheduleStatus.

        '
      operationId: execution_schedule.count
      parameters:
        - $ref: '#/components/parameters/AiresourceGroupHeader'
        - $ref: '#/components/parameters/AiqueryConfigurationId'
        - $ref: '#/components/parameters/AiqueryExecutionScheduleStatus'
      responses:
        '200':
          description: Number of execution schedules
          content:
            text/plain:
              schema:
                type: integer
        '400':
          $ref: '#/components/responses/AiBadRequest'
  /lm/meta:
    get:
      tags:
        - Meta
      summary: Meta information about API
      description:
        Meta information about an implementation of AI API, describing
        its capabilities, limits and extensions
      operationId: meta.get
      responses:
        '200':
          description: Description of the implementation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaCapabilities'
        '404':
          $ref: '#/components/responses/MetaNotFound'
  /lm/metrics:
    get:
      summary: 'Get metrics according to specified filter conditions.

        '
      description:
        "Retrieve metrics, labels, or tags according to filter conditions.
        \nOne query parameter is mandatory, either execution ID or filter. \nUse up
        to 10 execution IDs in a query parameter.\n"
      tags:
        - Metrics
      parameters:
        - $ref: '#/components/parameters/TrcktrackingResourceGroupHeader'
        - $ref: '#/components/parameters/TrckqueryFilter'
        - $ref: '#/components/parameters/TrckexecutionIds'
        - $ref: '#/components/parameters/TrckmetricAttributeSelector'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrckGetMetricResourceList'
          description:
            List of tracking metadata, where each item includes metrics,
            labels, tags and customInfo. If $select query parameter is specified,
            each item will include only the resources specified in $select.
        '400':
          $ref: '#/components/responses/TrckBadRequest'
        '501':
          $ref: '#/components/responses/TrckNotImplemented'
      operationId: metrics.find
    patch:
      summary: Create or update metrics, tags, or labels
      description:
        'Update or create metrics, tags, or labels associated with an execution.

        '
      parameters:
        - $ref: '#/components/parameters/TrcktrackingResourceGroupHeader'
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/TrckMetricResource'
        required: true
      tags:
        - Metrics
      responses:
        '204':
          description: Metrics was successfully updated/created
        '400':
          $ref: '#/components/responses/TrckBadRequest'
        '413':
          $ref: '#/components/responses/TrckPayloadTooLarge'
      operationId: metrics.patch
    delete:
      summary: Delete metrics, tags, or labels
      description: Delete metrics, tags, or labels associated with an execution.
      parameters:
        - $ref: '#/components/parameters/TrcktrackingResourceGroupHeader'
        - $ref: '#/components/parameters/TrckexecutionId'
      tags:
        - Metrics
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrckDeleteMetricsResponse'
          description: Metric Resource was successfully deleted
        '404':
          $ref: '#/components/responses/TrckNotFound'
      operationId: metrics.delete
  /analytics/kpis:
    get:
      tags:
        - KPI
      parameters:
        - $ref: '#/components/parameters/KpiquerySelect'
      summary: Get KPIs
      description:
        "Retrieve the number of executions, artifacts, and deployments
        \nfor each resource group, scenario, and executable. The columns to be returned
        can be specified in a query parameter.\n"
      operationId: kpi.get
      responses:
        '200':
          description: KPIs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KpiResultSet'
              examples:
                example-1:
                  value:
                    header:
                      - ResourceGroup
                      - Executions
                      - Artifacts
                      - Deployments
                    rows:
                      - - 00112233-4455-6677-8899-aabbccddeeff
                        - 30
                        - 30
                        - 3
        '400':
          $ref: '#/components/responses/KpiInvalidRequest'
        '404':
          $ref: '#/components/responses/KpiNotFound'
        '429':
          $ref: '#/components/responses/KpiTooManyRequests'
  /lm/dataset/files/{path}:
    parameters:
      - $ref: '#/components/parameters/DSetpath'
      - $ref: '#/components/parameters/DSetresourceGroupHeader'
    put:
      tags:
        - File
      summary: Upload file (size <= 100Mb)
      operationId: file.upload
      description:
        "Endpoint for uploading file. The maximum file size depends on
        the actual implementation \nbut must not exceed 100MB. The actual file size
        limit can be obtained by querying \nthe AI API Runtime Capabilities Endpoint
        and checking the limits in the section of the `fileUpload` extension.\n\n
        Path cannot be a prefix, it must be a path to an object.\nClients may group
        the objects in any manner they choose by specifying path prefixes.\n\nAllowed
        mime-types will be decided by the implementation.\nContent-Type header can
        be set to \"application/octet-stream\" but the implementation is responsible
        \nfor detecting the actual mime type and checking against the allowed list
        of mime types. \nFor security reasons, implementations cannot trust the mime
        type sent by the client.\n\nExample URLs: \n/files/dar/schemas/schema.json
        \n/files/icr/datasets/training/20201001/20201001-01.csv \n/files/icr/datasets/training/20201001/20201001-02.csv\
        \  \n/files/mask-detection/training/mask-detection-20210301.tar.gz"
      parameters:
        - $ref: '#/components/parameters/DSetoverwrite'
      requestBody:
        description: Body of the file upload request
        content:
          '*/*':
            schema:
              type: string
      responses:
        '201':
          $ref: '#/components/responses/DSetFileCreated'
        '400':
          $ref: '#/components/responses/DSetBadRequest'
        '409':
          $ref: '#/components/responses/DSetConflict'
        '413':
          $ref: '#/components/responses/DSetRequestTooLarge'
    delete:
      tags:
        - File
      summary: Delete file
      operationId: file.delete
      description: Delete the file specified by the path parameter.
      responses:
        '204':
          $ref: '#/components/responses/DSetSuccess'
        '400':
          $ref: '#/components/responses/DSetBadRequest'
        '404':
          $ref: '#/components/responses/DSetNotFound'
    get:
      tags:
        - File
      summary: Download file
      operationId: file.download
      description:
        Endpoint for downloading file. The path must point to an individual
        file.
      responses:
        '200':
          $ref: '#/components/responses/DSetFileContent'
        '400':
          $ref: '#/components/responses/DSetBadRequest'
        '404':
          $ref: '#/components/responses/DSetNotFound'
  /admin/objectStoreSecrets:
    post:
      tags:
        - Object Store Secret
      summary: Create a secret
      description:
        'Create a secret based on the configuration in the request body

        '
      operationId: kubesubmit.v4.object_store_secrets.create
      parameters:
        - $ref: '#/components/parameters/BckndtokenHeader'
        - $ref: '#/components/parameters/Bckndai-resource-group-default'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BckndobjectStoreSecretWithSensitiveDataRequestForPostCall'
      responses:
        '202':
          description:
            'The request to create a k8s secret based on the given configuration
            has been accepted.

            '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndobjectStoreSecretCreationResponse'
        '400':
          description:
            'One of the following failure cases has occurred: <ul> <li>
            Neither JSON nor YAML was able to be parsed. <li> The request was invalidly
            formatted

            '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndErrorResponse'
        default:
          $ref: '#/components/responses/BckndCommonError'
    get:
      tags:
        - Object Store Secret
      summary: Get a list of metadata of available secrets.
      description: 'Retrieve a list of metadata of the stored secrets.

        '
      operationId: kubesubmit.v4.object_store_secrets.query
      parameters:
        - $ref: '#/components/parameters/Bckndtop'
        - $ref: '#/components/parameters/Bckndskip'
        - $ref: '#/components/parameters/Bckndcount'
        - $ref: '#/components/parameters/BckndtokenHeader'
        - $ref: '#/components/parameters/Bckndai-resource-group-default'
      responses:
        '200':
          description:
            The request was successful and the requested metadata for the
            secret will be returned. This includes a list of attributes of the stored
            secret like - creationTimestamp, namespace etc. The secret's data field
            is not returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndobjectStoreSecretStatusResponse'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/objectStoreSecrets/{objectStoreName}:
    parameters:
      - $ref: '#/components/parameters/BckndobjectStoreName'
      - $ref: '#/components/parameters/BckndtokenHeader'
      - $ref: '#/components/parameters/Bckndai-resource-group-default'
    get:
      tags:
        - Object Store Secret
      summary: Returns the of metadata of secrets which match the query parameter.
      description:
        'This retrieves the metadata of the stored secret which match the
        parameter objectStoreName.

        The fetched secret is constructed like objectStoreName-object-store-secret

        The base64 encoded field for the stored secret is not returned.

        '
      operationId: kubesubmit.v4.object_store_secrets.get
      responses:
        '200':
          description:
            The request was processed successfully and the metadata of
            the of stored secrets wil be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndobjectStoreSecretStatus'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        default:
          $ref: '#/components/responses/BckndCommonError'
    delete:
      tags:
        - Object Store Secret
      summary: Delete object store secret
      description: Delete a secret with the name of objectStoreName if it exists.
      operationId: kubesubmit.v4.object_store_secrets.delete
      responses:
        '202':
          description: The request to delete the secret has been accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndobjectStoreSecretDeletionResponse'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndErrorResponse'
        default:
          $ref: '#/components/responses/BckndCommonError'
    patch:
      tags:
        - Object Store Secret
      summary: Update object store secret
      description: 'Update a secret with name of objectStoreName if it exists.

        '
      operationId: kubesubmit.v4.object_store_secrets.patch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BckndobjectStoreSecretWithSensitiveDataRequest'
      responses:
        '202':
          description:
            'The request to update the secret based on the given configuration
            has been accepted.

            '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndobjectStoreSecretModificationResponse'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndErrorResponse'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/secrets:
    post:
      tags:
        - Secret
      summary: Create a new generic secret
      description:
        Create a new generic secret in the corresponding resource group
        or at main tenant level.
      operationId: kubesubmit.v4.generic_secrets.create
      parameters:
        - $ref: '#/components/parameters/BckndtokenHeader'
        - $ref: '#/components/parameters/Bckndai-resource-group'
        - $ref: '#/components/parameters/Bckndai-tenant-scope'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BckndGenericSecretPostBody'
      responses:
        '200':
          description: Secret has been created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndGenericSecretDataResponse'
              example:
                message: secret has been created
                name: my-generic-secret
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
    get:
      tags:
        - Secret
      summary: Lists all secrets corresponding to tenant
      description:
        Lists all secrets corresponding to tenant. This retrieves metadata
        only, not the secret data itself.
      operationId: kubesubmit.v4.generic_secrets.get
      parameters:
        - $ref: '#/components/parameters/BckndtokenHeader'
        - $ref: '#/components/parameters/Bckndtop'
        - $ref: '#/components/parameters/Bckndskip'
        - $ref: '#/components/parameters/Bckndcount'
        - $ref: '#/components/parameters/Bckndai-resource-group'
        - $ref: '#/components/parameters/Bckndai-tenant-scope'
      responses:
        '200':
          description: The secrets were fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndListGenericSecretsResponse'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/secrets/{secretName}:
    parameters:
      - $ref: '#/components/parameters/BckndtokenHeader'
      - $ref: '#/components/parameters/BckndsecretName'
      - $ref: '#/components/parameters/Bckndai-resource-group'
      - $ref: '#/components/parameters/Bckndai-tenant-scope'
    patch:
      tags:
        - Secret
      summary: Update secret credentials
      description:
        Update secret credentials. Replace secret data with the provided
        data.
      operationId: kubesubmit.v4.generic_secrets.update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BckndGenericSecretPatchBody'
      responses:
        '200':
          description: The secret has been updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndGenericSecretDataResponse'
              example:
                message: The secret has been modified
                name: my-generic-secret
        '404':
          $ref: '#/components/responses/BckndNotFound'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
    delete:
      tags:
        - Secret
      summary: Deletes the secret
      description: Deletes the secret from provided resource group namespace
      operationId: kubesubmit.v4.generic_secrets.delete
      responses:
        '200':
          description: The secret has been removed
        '404':
          $ref: '#/components/responses/BckndNotFound'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndErrorResponse'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/resourceGroups:
    post:
      parameters:
        - $ref: '#/components/parameters/BckndtokenHeader'
      tags:
        - Resource Group
      summary: Creates a resource group
      description:
        'Create resource group to a given main tenant. The length of resource
        group id must be between 3 and 253.

        '
      operationId: kubesubmit.v4.resourcegroups.create
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BckndResourceGroupsPostRequest'
      responses:
        '202':
          description: A resource group base object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndResourceGroupBase'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
    get:
      parameters:
        - $ref: '#/components/parameters/BckndtokenHeader'
        - $ref: '#/components/parameters/Bckndtop'
        - $ref: '#/components/parameters/Bckndskip'
        - $ref: '#/components/parameters/Bckndcount'
        - name: Prefer
          in: header
          description:
            '<p> One can use the HTTP Prefer header to configure the "maxpagesize"
            of this endpoint. "maxpagesize" is the maximum number of resourcegroups
            to return for a request to this endpoint. If more resourcegroups exist,
            the response will include a "Link" HTTP header. This header will include
            the URL for getting the next batch of resourcegroups.

            <p> The "maxpagesize" preference and the "continueToken" parameter together
            enable splitting a large list of resourcegroups to small chunks. This feature
            can help to reduce the response time of a single list-resourcegroup request
            when the client has a large number resourcegroups in the system.

            <p> By default, the "maxpagesize" is not set, which means retrieving all
            resourcegroups in a single request.

            <p> Setting a maxpagesize may return fewer than the requested amount of
            resourcegroups (up to zero) in the event all requested resourcegroups are
            filtered out. The client should only use the presence of the Link header
            in the response to determine whether more resourcegroups are available.
            If "maxpagesize" is specified and the response does not include a Link header,
            the client may assume that no more resourcegroups are available.

            '
          required: false
          schema:
            type: string
        - name: continueToken
          in: query
          schema:
            type: string
          required: false
          description:
            '<p> A token for getting more resourcegroups from the service.
            It is encoded in the URL returned via a "Link" HTTP header of a response
            of this endpoint if the original request specified "maxpagesize" in a "Prefer"
            HTTP header and the number of available resourcegroups is larger than the
            number specified by "maxpagesize". Do <b>NOT</b> use the "continueToken"
            parameter in other scenarios.

            <p> The server may reject a continue token that it does not recognize. If
            the specified continue token is no longer valid whether due to expiration
            (generally five to fifteen minutes) or a configuration change on the server,
            the server will respond with a 410 ResourceExpired error. In this case,
            the client must restart their list request without the continue token.

            '
        - name: labelSelector
          in: query
          description:
            "filter by labels. Pass in pairs in the form of 'key=value'
            and / or 'key!=value' separated by commas and the result will be filtered
            to only those scenarios containing and / or not containing all given key/values

            "
          schema:
            type: array
            minItems: 1
            items:
              type: string
              pattern: ^[^ =,!]+!?=[^ =,!]+$
          example: key1=value1,key2!=value2
          style: form
          explode: false
          required: false
      tags:
        - Resource Group
      summary: Gets all resource groups of a given tenant
      description: 'Retrieve a list of resource groups for a given tenant.

        '
      operationId: kubesubmit.v4.resourcegroups.get_all
      responses:
        '200':
          description: A list of resource groups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndResourceGroupList'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/resourceGroups/{resourceGroupId}:
    parameters:
      - $ref: '#/components/parameters/BckndresourceGroupId'
      - $ref: '#/components/parameters/BckndtokenHeader'
    get:
      tags:
        - Resource Group
      summary: Get a resource group
      description: 'Get a resource group of a given main tenant.

        '
      operationId: kubesubmit.v4.resourcegroups.get
      responses:
        '200':
          description: A resource group object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndResourceGroup'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        default:
          $ref: '#/components/responses/BckndCommonError'
    delete:
      tags:
        - Resource Group
      summary: Delete a resource group
      description: 'Delete a resource group of a given main tenant.

        '
      operationId: kubesubmit.v4.resourcegroups.delete
      responses:
        '202':
          description: The deletion of the resource group has been scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndResourceGroupDeletionResponse'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
    patch:
      tags:
        - Resource Group
      summary: Change some characteristics of the resource group
      description:
        'Replace some characteristics of the resource group, for instance
        labels.

        '
      operationId: kubesubmit.v4.resourcegroups.patch
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BckndResourceGroupPatchRequest'
      responses:
        '202':
          description: Resource group changes accepted.
          headers:
            Location:
              description: URL of the scheduled deployment
              schema:
                $ref: '#/components/schemas/BckndUrl'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/resources/nodes:
    patch:
      tags:
        - Resource
      summary: Set reserved resources corresponding to tenant
      description: Set hot spare nodes corresponding to tenant at main tenant level.
      operationId: kubesubmit.v4.resources.patch
      parameters:
        - $ref: '#/components/parameters/BckndtokenHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BckndResourcePatchBody'
      responses:
        '200':
          description: Reserved resource has been set.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndResourcePatchResponse'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
    get:
      tags:
        - Resource
      summary: Get node request status corresponding to tenant
      description:
        Lists all hot spare nodes, used nodes and total nodes corresponding
        to tenant.
      operationId: kubesubmit.v4.resources.get
      parameters:
        - $ref: '#/components/parameters/BckndtokenHeader'
      responses:
        '200':
          description: Reserved resource status were fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndResourceGetResponse'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /lm/executions/{executionId}/logs:
    get:
      tags:
        - Execution
      summary: Get logs of specific execution
      description:
        Retrieve logs of an execution for getting insight into the execution
        results or failures.
      operationId: kubesubmit.v4.executions.get_logs
      parameters:
        - $ref: '#/components/parameters/RTAexecutionId'
        - $ref: '#/components/parameters/RTAtokenHeader'
        - $ref: '#/components/parameters/RTAlimit'
        - $ref: '#/components/parameters/RTAstart'
        - $ref: '#/components/parameters/RTAend'
        - $ref: '#/components/parameters/RTAorder'
      responses:
        '200':
          description:
            The query was processed successfully and logs of the requested
            execution will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RTALogCommonResponse'
        '400':
          $ref: '#/components/responses/RTABadRequest'
        '401':
          $ref: '#/components/responses/RTAUnauthorized'
        '404':
          $ref: '#/components/responses/RTANotFound'
        default:
          $ref: '#/components/responses/RTACommonError'
  /lm/deployments/{deploymentId}/logs:
    get:
      tags:
        - Deployment
      summary: Get logs of specific deployment
      description:
        Retrieve logs of a deployment for getting insight into the deployment
        results or failures.
      operationId: kubesubmit.v4.deployments.get_logs
      parameters:
        - $ref: '#/components/parameters/RTAdeploymentId'
        - $ref: '#/components/parameters/RTAtokenHeader'
        - $ref: '#/components/parameters/RTAlimit'
        - $ref: '#/components/parameters/RTAstart'
        - $ref: '#/components/parameters/RTAend'
        - $ref: '#/components/parameters/RTAorder'
      responses:
        '200':
          description:
            The query was processed successfully and logs of the requested
            deployment will be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RTALogCommonResponse'
        '400':
          $ref: '#/components/responses/RTABadRequest'
        '401':
          $ref: '#/components/responses/RTAUnauthorized'
        '404':
          $ref: '#/components/responses/RTANotFound'
        default:
          $ref: '#/components/responses/RTACommonError'
  /admin/repositories:
    post:
      tags:
        - Repository
      summary: On-board a new GitOps repository
      description: On-board a new GitOps repository as specified in the content payload
      operationId: kubesubmit.v4.repositories.create
      parameters:
        - $ref: '#/components/parameters/BckndtokenHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BckndArgoCDRepositoryData'
      responses:
        '200':
          description: The repository has been on-boarded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndArgoCDRepositoryCreationResponse'
        '409':
          description: The provided repository already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndErrorResponse'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
    get:
      tags:
        - Repository
      summary: List all GitOps repositories for a tenant
      description: Retrieve a list of all GitOps repositories for a tenant.
      operationId: kubesubmit.v4.repositories.get_all
      parameters:
        - $ref: '#/components/parameters/BckndtokenHeader'
        - $ref: '#/components/parameters/Bckndtop'
        - $ref: '#/components/parameters/Bckndskip'
        - $ref: '#/components/parameters/Bckndcount'
      responses:
        '200':
          description: Returns a list of all GitOps repositories for the tenant.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndArgoCDRepositoryDataResponse'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/repositories/{repositoryName}:
    parameters:
      - $ref: '#/components/parameters/BckndrepositoryName'
      - $ref: '#/components/parameters/BckndtokenHeader'
    get:
      tags:
        - Repository
      summary: Get the access details for a repository
      description: Retrieve the access details for a repository if it exists.
      operationId: kubesubmit.v4.repositories.get
      responses:
        '200':
          description: The repository details have been found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndArgoCDRepositoryDetails'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        default:
          $ref: '#/components/responses/BckndCommonError'
    patch:
      tags:
        - Repository
      summary: Update the repository credentials.
      description:
        'Update the referenced repository credentials to synchronize a
        repository.

        '
      operationId: kubesubmit.v4.repositories.update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BckndArgoCDRepositoryCredentials'
      responses:
        '200':
          description:
            The repository credentials have been updated and will eventually
            be synced.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndArgoCDRepositoryModificationResponse'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
    delete:
      tags:
        - Repository
      summary: Off-board a repository.
      description: Remove a repository from GitOps.
      operationId: kubesubmit.v4.repositories.delete
      responses:
        '200':
          description: The repository has been off-boarded successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndArgoCDRepositoryDeletionResponse'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndErrorResponse'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/applications:
    post:
      tags:
        - Application
      summary: Create an application
      description: 'Create an ArgoCD application to synchronise a repository.

        '
      operationId: kubesubmit.v4.applications.create
      parameters:
        - $ref: '#/components/parameters/BckndtokenHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/BckndArgoCDApplicationData'
                - $ref: '#/components/schemas/BckndArgoCDApplicationDataRepoName'
      responses:
        '200':
          description:
            The ArgoCD application has been created and will be eventually
            synchronised with the repository.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndArgoCDApplicationCreationResponse'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
    get:
      tags:
        - Application
      summary: Return all applications
      description: 'Return all Argo CD application data objects.

        '
      operationId: kubesubmit.v4.applications.get_all
      parameters:
        - $ref: '#/components/parameters/BckndtokenHeader'
        - $ref: '#/components/parameters/Bckndtop'
        - $ref: '#/components/parameters/Bckndskip'
        - $ref: '#/components/parameters/Bckndcount'
      responses:
        '200':
          description: All applications have been found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndAllArgoCDApplicationData'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/applications/{applicationName}/status:
    parameters:
      - $ref: '#/components/parameters/BckndapplicationName'
      - $ref: '#/components/parameters/BckndtokenHeader'
    get:
      tags:
        - Application
      summary: Returns the ArgoCD application status
      description: 'Returns the ArgoCD application health and sync status.

        '
      operationId: kubesubmit.v4.applications.get_status
      responses:
        '200':
          description: The application status has been found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndArgoCDApplicationStatus'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/applications/{applicationName}:
    parameters:
      - $ref: '#/components/parameters/BckndapplicationName'
      - $ref: '#/components/parameters/BckndtokenHeader'
    patch:
      tags:
        - Application
      summary: Update the ArgoCD application.
      description:
        'Update the referenced ArgoCD application to synchronize the repository.

        '
      operationId: kubesubmit.v4.applications.update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BckndArgoCDApplicationBaseData'
      responses:
        '200':
          description:
            The ArgoCD application has been created and will be eventually
            synchronised with the repository.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndArgoCDApplicationModificationResponse'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
    get:
      tags:
        - Application
      summary: Get ArgoCD application
      description: 'Retrieve the ArgoCD application details.

        '
      operationId: kubesubmit.v4.applications.get
      responses:
        '200':
          description: The application has been found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndArgoCDApplicationData'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        default:
          $ref: '#/components/responses/BckndCommonError'
    delete:
      tags:
        - Application
      summary: Delete application
      description: Delete an ArgoCD application
      operationId: kubesubmit.v4.applications.delete
      responses:
        '200':
          description: The argoCD application has been deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndArgoCDApplicationDeletionResponse'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndErrorResponse'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/applications/{applicationName}/refresh:
    parameters:
      - $ref: '#/components/parameters/BckndapplicationName'
      - $ref: '#/components/parameters/BckndtokenHeader'
    post:
      tags:
        - Application
      summary: Makes ArgoDC refresh the specified application
      description:
        'Schedules a refresh of the specified application that will be
        picked up by ArgoCD asynchronously

        '
      operationId: kubesubmit.v4.applications.refresh
      responses:
        '202':
          description: A refresh of the application has been scheduled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndArgoCDApplicationRefreshResponse'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/dockerRegistrySecrets/{dockerRegistryName}:
    parameters:
      - $ref: '#/components/parameters/BcknddockerRegistryName'
      - $ref: '#/components/parameters/BckndtokenHeader'
    get:
      tags:
        - Docker Registry Secret
      summary: Returns the of metadata of secrets which match the query parameter.
      description:
        'Retrieve the stored secret metadata which matches the parameter
        dockerRegistryName. The base64 encoded field for the stored secret is not
        returned.

        '
      operationId: kubesubmit.v4.docker_registry_secrets.get
      responses:
        '200':
          description:
            The request was processed successfully and the metadata of
            the of stored secrets wil be returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BcknddockerRegistrySecretStatus'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        default:
          $ref: '#/components/responses/BckndCommonError'
    delete:
      tags:
        - Docker Registry Secret
      summary: Delete docker registry secret
      description: Delete a secret with the name of dockerRegistryName if it exists.
      operationId: kubesubmit.v4.docker_registry_secrets.delete
      responses:
        '202':
          description: The request to delete the secret has been accepted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BcknddockerRegistrySecretDeletionResponse'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndErrorResponse'
        default:
          $ref: '#/components/responses/BckndCommonError'
    patch:
      tags:
        - Docker Registry Secret
      summary: Update a secret
      description:
        'Update a secret with name of dockerRegistryName if it exists.

        '
      operationId: kubesubmit.v4.docker_registry_secrets.patch
      requestBody:
        required: true
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/BcknddockerRegistrySecretWithSensitiveDataRequest'
      responses:
        '202':
          description:
            'The request to update the secret based on the the given configuration
            has been accepted.

            '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BcknddockerRegistrySecretModificationResponse'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        '400':
          description: The request was malformed and could thus not be processed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndErrorResponse'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/dockerRegistrySecrets:
    post:
      tags:
        - Docker Registry Secret
      summary: Create a secret
      description:
        'Create a secret based on the configuration in the request body.

        '
      operationId: kubesubmit.v4.docker_registry_secrets.create
      parameters:
        - $ref: '#/components/parameters/BckndtokenHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/BcknddockerRegistrySecretWithSensitiveDataRequest'
                - type: object
                  required:
                    - name
                  properties:
                    name:
                      $ref: '#/components/schemas/BcknddockerRegistryNameComponent'
      responses:
        '202':
          description:
            'The request to create a k8s secret based on the given configuration
            has been accepted.

            '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BcknddockerRegistrySecretCreationResponse'
        '400':
          description:
            'One of the following failure cases has occurred: <ul> <li>
            Neither JSON nor YAML was able to be parsed. <li> The request was invalidly
            formatted

            '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndErrorResponse'
        default:
          $ref: '#/components/responses/BckndCommonError'
    get:
      tags:
        - Docker Registry Secret
      summary: Get a list of metadata of secrets.
      description: 'Retrieve a list of metadata of the stored secrets

        '
      operationId: kubesubmit.v4.docker_registry_secrets.query
      parameters:
        - $ref: '#/components/parameters/Bckndtop'
        - $ref: '#/components/parameters/Bckndskip'
        - $ref: '#/components/parameters/Bckndcount'
        - $ref: '#/components/parameters/BckndtokenHeader'
      responses:
        '200':
          description:
            The request was successful and the requested metadata for the
            secret will be returned. This includes a list of attributes of the stored
            secret like - creationTimestamp, namespace etc. The secret's data field
            is not returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BcknddockerRegistrySecretStatusResponse'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/services:
    get:
      tags:
        - Service
      summary: Gets all services of a given main tenant
      description: 'Retrieve a list of services for a given main tenant.

        '
      operationId: kubesubmit.v4.aiservices.get_all
      parameters:
        - $ref: '#/components/parameters/BckndtokenHeader'
      responses:
        '200':
          description: A list of services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndServiceList'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/services/{ServiceName}:
    parameters:
      - $ref: '#/components/parameters/BckndtokenHeader'
      - $ref: '#/components/parameters/BckndServiceName'
    get:
      tags:
        - Service
      summary: Get a service
      description: 'Get an service of a given main tenant.

        '
      operationId: kubesubmit.v4.aiservices.get
      responses:
        '200':
          description: A service object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndExtendedService'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        '404':
          $ref: '#/components/responses/BckndNotFound'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/resourceQuota/resourceGroups:
    parameters:
      - $ref: '#/components/parameters/BckndtokenHeader'
      - $ref: '#/components/parameters/BckndquotaOnly'
    get:
      tags:
        - Resource Quota
      summary: Get the quota for resource groups
      description: Get the details about quota and usage for resource groups
      operationId: kubesubmit.v4.resource_quota.get_resource_group_quota
      responses:
        '200':
          description: quota for resourcegroups
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndCommonResourceQuotaResponse'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/resourceQuota/executables:
    parameters:
      - $ref: '#/components/parameters/BckndtokenHeader'
      - $ref: '#/components/parameters/BckndquotaOnly'
    get:
      tags:
        - Resource Quota
      summary: Get the quota for executables
      description: Get the details about quota and usage for executables
      operationId: kubesubmit.v4.resource_quota.get_executable_quota
      responses:
        '200':
          description: quota for executable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndExecutableResourceQuotaResponse'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/resourceQuota/applications:
    parameters:
      - $ref: '#/components/parameters/BckndtokenHeader'
      - $ref: '#/components/parameters/BckndquotaOnly'
    get:
      tags:
        - Resource Quota
      summary: Get the quota for applications
      description: Get the details about quota and usage for applications
      operationId: kubesubmit.v4.resource_quota.get_application_quota
      responses:
        '200':
          description: quota for applications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndCommonResourceQuotaResponse'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/resourceQuota/repositories:
    parameters:
      - $ref: '#/components/parameters/BckndtokenHeader'
      - $ref: '#/components/parameters/BckndquotaOnly'
    get:
      tags:
        - Resource Quota
      summary: Get the quota for repositories
      description: Get the details about quota and usage for repositories
      operationId: kubesubmit.v4.resource_quota.get_repository_quota
      responses:
        '200':
          description: quota for repositories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndCommonResourceQuotaResponse'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/resourceQuota/secrets:
    parameters:
      - $ref: '#/components/parameters/BckndtokenHeader'
      - $ref: '#/components/parameters/BckndquotaOnly'
    get:
      tags:
        - Resource Quota
      summary: Get the quota for tenant-level generic secrets
      description:
        Get the details about quota and usage for tenant-level generic
        secrets
      operationId: kubesubmit.v4.resource_quota.get_generic_secret_quota
      responses:
        '200':
          description: quota for generic secrets on the tenant level
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndCommonResourceQuotaResponse'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/resourceQuota/dockerRegistrySecrets:
    parameters:
      - $ref: '#/components/parameters/BckndtokenHeader'
      - $ref: '#/components/parameters/BckndquotaOnly'
    get:
      tags:
        - Resource Quota
      summary: Get the quota for docker registry secrets
      description: Get the details about quota and usage for docker registry secrets
      operationId: kubesubmit.v4.resource_quota.get_docker_registry_secret_quota
      responses:
        '200':
          description: quota for generic secrets on the tenant level
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndCommonResourceQuotaResponse'
        default:
          $ref: '#/components/responses/BckndCommonError'
  /admin/resourceQuota/deployments:
    parameters:
      - $ref: '#/components/parameters/BckndtokenHeader'
      - $ref: '#/components/parameters/BckndquotaOnly'
    get:
      tags:
        - Resource Quota
      summary: Get the quota for deployments
      description: Get the details about quota and usage for deployments
      operationId: kubesubmit.v4.resource_quota.get_deployment_quota
      responses:
        '200':
          description: A resource quota object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BckndDeploymentResourceQuotaResponse'
        '400':
          $ref: '#/components/responses/BckndBadRequest'
        default:
          $ref: '#/components/responses/BckndCommonError'
        '404':
          $ref: '#/components/responses/BckndNotFound'
components:
  securitySchemes:
    Oauth2:
      type: oauth2
      description:
        OAuth client credentials (client ID and secret) are required. These
        can be requested from SAP BTP cloud cockpit.
      flows:
        clientCredentials:
          tokenUrl: https://(subdomain_identity_zone).authentication.(host)/oauth/token
          scopes: {}
  schemas:
    RTAId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description: Generic ID
    RTATtl:
      type: string
      pattern: ^[0-9]+[m,M,h,H,d,D]$
      example: 24H
      description: TTL value of deployment
    RTALabelList:
      type: array
      description: Arbitrary labels as meta information
      items:
        $ref: '#/components/schemas/RTALabel'
    RTAArtifactLabelList:
      type: array
      description: Arbitrary labels as meta information
      items:
        $ref: '#/components/schemas/RTAArtifactLabel'
    RTALabel:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          example: ai.sap.com/scenarioName
          pattern: ^(?:[a-z0-9](?:[a-z0-9-]{0,61}[a-z0-9])?\.)*ai\.sap\.com\/[\w\.-]+$
        value:
          type: string
          maxLength: 5000
    RTAArtifactLabel:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          example: ext.ai.sap.com/s4hana-version
          pattern: ^ext\.ai\.sap\.com\/[\w\.-]+$
          maxLength: 256
        value:
          type: string
          maxLength: 5000
    RTACreationResponseMessage:
      type: string
      description: Message
      example: Created
    RTAScenarioId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description: ID of the scenario
    RTAScenario:
      type: object
      description: Entity having labels
      required:
        - id
        - name
        - createdAt
        - modifiedAt
      properties:
        id:
          $ref: '#/components/schemas/RTAScenarioId'
        name:
          type: string
          maxLength: 256
          description: Name of the scenario
        description:
          type: string
          maxLength: 5000
          description: Description of the scenario
        labels:
          $ref: '#/components/schemas/RTALabelList'
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
        modifiedAt:
          type: string
          format: date-time
          description: Timestamp of latest resource modification
    RTAExecutableId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description: ID of the executable
    RTAExecutable:
      description: Entity having labels
      type: object
      required:
        - id
        - name
        - scenarioId
        - deployable
        - createdAt
        - modifiedAt
      properties:
        id:
          $ref: '#/components/schemas/RTAExecutableId'
        name:
          type: string
          description: Name of the executable
        description:
          type: string
          description: Description of the executable
        scenarioId:
          $ref: '#/components/schemas/RTAScenarioId'
        inputArtifacts:
          $ref: '#/components/schemas/RTAExecutableInputArtifactList'
        outputArtifacts:
          $ref: '#/components/schemas/RTAExecutableOutputArtifactList'
        parameters:
          $ref: '#/components/schemas/RTAExecutableParameterList'
        deployable:
          type: boolean
          description: Whether this pipeline is deployable
          example: false
        labels:
          $ref: '#/components/schemas/RTALabelList'
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
        modifiedAt:
          type: string
          format: date-time
          description: Timestamp of latest resource modification
    RTAExecutableParameterList:
      type: array
      description: Executable parameters
      items:
        $ref: '#/components/schemas/RTAExecutableParameter'
    RTAExecutableParameter:
      type: object
      description: Argument of an executable
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the signature argument
        description:
          type: string
          maxLength: 5000
          description: Description of the signature argument
        default:
          type: string
          description: Default value of the signature argument
        type:
          type: string
          enum:
            - string
          description: Type of the signature argument
    RTAExecutableInputArtifactList:
      type: array
      description: List of Artifacts that the executable expects as input artifacts
      items:
        $ref: '#/components/schemas/RTAExecutableArtifact'
    RTAExecutableOutputArtifactList:
      type: array
      description:
        List of Artifacts that the executable will produce. If storage
        is not managed internally, a storage location will have to be specified when
        triggering an execution
      items:
        $ref: '#/components/schemas/RTAExecutableArtifact'
    RTAExecutableArtifact:
      type: object
      description: Input or output artifact
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the signature argument
        description:
          type: string
          maxLength: 5000
          description: Description of the signature argument
        kind:
          type: string
          description: Kind of the artifact, i.e. model or dataset
        labels:
          $ref: '#/components/schemas/RTAArtifactLabelList'
    RTAModelBaseData:
      type: object
      required:
        - model
        - executableId
        - description
        - versions
      properties:
        model:
          type: string
          description: Name of the model
        executableId:
          $ref: '#/components/schemas/RTAExecutableId'
        description:
          type: string
          description: Description of the model and its capabilities
        versions:
          $ref: '#/components/schemas/RTAModelVersionList'
    RTAModelVersionList:
      type: array
      description: List of model versions that the model object has
      items:
        $ref: '#/components/schemas/RTAModelVersion'
    RTAModelVersion:
      type: object
      description:
        Model version information including whether it is latest version,
        its deprecation status and retirement date
      required:
        - name
        - isLatest
        - deprecated
        - retirementDate
      properties:
        name:
          type: string
          description: Name of model version
        isLatest:
          type: boolean
          description: Displays whether it is the latest version offered for the model
        deprecated:
          type: boolean
          description: Deprecation status of model
        retirementDate:
          type: string
          description: Retirement date of model in ISO 8601 timestamp
    RTAArtifact:
      description: Entity having labels
      type: object
      required:
        - name
        - url
        - executionId
        - kind
        - createdAt
      properties:
        name:
          type: string
          maxLength: 256
          description:
            Name of the artifact; this is used for dependent pipelines
            to resolve an artifact
        executionId:
          $ref: '#/components/schemas/RTAExecutionId'
        url:
          $ref: '#/components/schemas/RTAArtifactUrl'
        signature:
          $ref: '#/components/schemas/RTAArtifactSignature'
        kind:
          type: string
          enum:
            - model
            - dataset
            - resultset
            - other
          description: Kind of the artifact, i.e. model or dataset
        labels:
          $ref: '#/components/schemas/RTALabelList'
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
    RTAArtifactName:
      type: string
      maxLength: 256
    RTAArtifactUrl:
      type: string
      pattern: ([a-z0-9-]+):\/\/.+
      maxLength: 1024
      example: s3://some_bucket/some_path
      description: "Reference to the location of the artifact.

        Note, the credentials will be found in a secret called

        'some_bucket-object_store_secret'. If not provided, a default will be assumed.

        "
    RTAArtifactSignature:
      type: string
      maxLength: 256
    RTAArtifactArray:
      type: array
      items:
        $ref: '#/components/schemas/RTAArtifact'
    RTADeployment:
      type: object
      description: Detailed data about an inference-pipeline deployment
      required:
        - scenarioId
        - executableId
        - createdAt
        - modifiedAt
      properties:
        scenarioId:
          $ref: '#/components/schemas/RTAScenarioId'
        executableId:
          $ref: '#/components/schemas/RTAExecutableId'
        id:
          $ref: '#/components/schemas/RTADeploymentId'
        deploymentUrl:
          $ref: '#/components/schemas/RTADeploymentUrl'
        latestRunningTargetId:
          $ref: '#/components/schemas/RTALatestRunningTargetId'
        targetId:
          $ref: '#/components/schemas/RTATargetId'
        ttl:
          $ref: '#/components/schemas/RTATtl'
        status:
          type: string
          description: Deployment status
          enum:
            - PENDING
            - RUNNING
            - COMPLETED
            - DEAD
            - UNKNOWN
            - DELETING
        statusMessage:
          type: string
          description: Deployment status message
          maxLength: 256
        lastOperation:
          type: string
          description:
            Reflection of user's action on deployment. The value will be
            CREATE after user sends POST - create deployment, UPDATE after user sends
            PATCH - update deployment, and DELETE after user sends DELETE - delete
            deployment
          enum:
            - CREATE
            - UPDATE
            - CASCADE-UPDATE
            - DELETE
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
        modifiedAt:
          type: string
          format: date-time
          description: Timestamp of latest resource modification
    RTADeploymentId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description: ID of the deployment
    RTATargetId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description:
        Client provided reference, with which the status of a PATCHed deployment
        can be tracked
    RTALatestRunningTargetId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description: Target ID of the latest running deployment
    RTADeploymentUrl:
      description: Consumption URL of the pipeline deployment
      type: string
      format: url
    RTADeploymentCreationResponseMessage:
      type: string
      description: Message
      example: Deployment scheduled
    RTADeploymentCascadeUpdateResponseMessage:
      type: string
      description: Message
      example: Deployment Cascade Update scheduled
    RTADeploymentDeletionResponseMessage:
      type: string
      description: Message
      example: Deployment deletion scheduled
    RTADeploymentModificationResponseMessage:
      type: string
      description: Message
      example: Deployment modification scheduled
    RTADeploymentStatusDetails:
      type: object
      description: Current status details of the deployment
    RTADeploymentDetails:
      type: object
      properties:
        scaling:
          $ref: '#/components/schemas/RTABackendDetails'
        resources:
          $ref: '#/components/schemas/RTABackendDetails'
    RTABackendDetails:
      type: object
      properties:
        backendDetails:
          type: object
          description: Current details of the deployment
    RTAExecution:
      type: object
      description: Execution
      required:
        - scenarioId
        - executableId
        - createdAt
        - modifiedAt
      properties:
        scenarioId:
          $ref: '#/components/schemas/RTAScenarioId'
        executableId:
          $ref: '#/components/schemas/RTAExecutableId'
        id:
          $ref: '#/components/schemas/RTAExecutionId'
        status:
          type: string
          description: Status of the execution
          enum:
            - PENDING
            - RUNNING
            - COMPLETED
            - DEAD
            - STOPPING
            - STOPPED
            - UNKNOWN
          example: COMPLETED
        statusMessage:
          type: string
          description: Execution status message
          maxLength: 256
        submissionTimestamp:
          type: string
          description: Timestamp of execution submission
          format: date-time
          example: '2017-09-15T12:01:06Z'
          nullable: true
        startTimestamp:
          type: string
          description: Timestamp of execution start
          format: date-time
          example: '2017-09-15T12:01:06Z'
          nullable: true
        finishTimestamp:
          type: string
          description: Timestamp of execution finish
          format: date-time
          example: '2017-09-15T12:01:06Z'
          nullable: true
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
        modifiedAt:
          type: string
          format: date-time
          description: Timestamp of latest resource modification
    RTAInputArtifactArgumentBinding:
      type: object
      required:
        - name
        - url
      properties:
        name:
          $ref: '#/components/schemas/RTAArtifactName'
        url:
          $ref: '#/components/schemas/RTAArtifactUrl'
        signature:
          $ref: '#/components/schemas/RTAArtifactSignature'
      description: Required for execution
    RTAOutputArtifactArgumentBinding:
      type: object
      required:
        - name
      properties:
        name:
          $ref: '#/components/schemas/RTAArtifactName'
        url:
          $ref: '#/components/schemas/RTAArtifactUrl'
      description: Result of execution
    RTAExecutableArgumentBinding:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          maxLength: 256
        value:
          type: string
      description: 'Required for execution

        Result of activation

        '
    RTAExecutionId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description: ID of the execution
    RTAExecutionCreationResponseMessage:
      type: string
      description: Message
      example: Execution scheduled
    RTAExecutionModificationResponseMessage:
      type: string
      description: Message
      example: Execution modification scheduled
    RTAExecutionDeletionResponseMessage:
      type: string
      description: Message
      example: Execution deletion scheduled
    RTAExecutionStatusDetails:
      type: object
      description: Current status details of the execution
    RTALogCommonResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/RTALogCommonData'
      description: 'A common log query response.

        '
    RTALogCommonData:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/RTALogCommonResult'
    RTALogCommonResult:
      type: array
      items:
        $ref: '#/components/schemas/RTALogCommonResultItem'
    RTALogCommonResultItem:
      type: object
      description: Common log record.
      properties:
        timestamp:
          $ref: '#/components/schemas/RTAtimestamp'
        msg:
          $ref: '#/components/schemas/RTAmessage'
    RTAtimestamp:
      description: Datetime in RFC 3339.
      type: string
      format: date-time
      example: '2021-05-19T00:00:14.347+00:00'
    RTAmessage:
      description: message content.
      type: string
    RTAErrorResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/RTAError'
    RTAError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Descriptive error code (not http status code)
        message:
          type: string
          description: Plaintext error description
          example: something went wrong
        requestId:
          type: string
          description: ID of the individual request
        target:
          type: string
          description: Invoked URL
        details:
          description: Optional details of the error message
          type: object
    DSetUrl:
      type: string
      format: url
      example: https://download.example.com/test/file.bin
    DSetError:
      description: Error Response
      type: object
      properties:
        code:
          type: string
          minLength: 1
        message:
          type: string
          minLength: 1
        target:
          type: string
          minLength: 1
        requestId:
          type: string
        details:
          type: array
          uniqueItems: true
          minItems: 0
          items:
            required:
              - code
              - message
            properties:
              code:
                type: string
                minLength: 1
              message:
                type: string
                minLength: 1
      required:
        - code
        - message
      x-examples:
        example-1:
          code: '03021655'
          message: Bad request encountered. Please try again with possible-solution-here.
          target: /url/path
          requestId: 9832bf934f3743v3948v3
          details:
            - code: '01041211'
              message: Optional nested error message.
    DSetFileCreationResponse:
      description: Response for successful file creation
      type: object
      required:
        - message
        - url
      properties:
        message:
          type: string
          description: File creation response message
          example: File creation acknowledged
        url:
          $ref: '#/components/schemas/DSetUrl'
    AiScenario:
      type: object
      description:
        'An ML Scenario consists of a number of executables. E.g., there
        can be one or several training executables, an inference (deployment) executable.
        An ML Scenario is versioned.

        '
      required:
        - name
        - id
        - createdAt
        - modifiedAt
      properties:
        name:
          type: string
          maxLength: 256
          description: Name of the scenario
        description:
          type: string
          maxLength: 5000
          description: Description of the scenario
        labels:
          $ref: '#/components/schemas/AiScenarioLabelList'
        id:
          $ref: '#/components/schemas/AiScenarioId'
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
        modifiedAt:
          type: string
          format: date-time
          description: Timestamp of latest resource modification
    AiScenarioLabelList:
      type: array
      description: Arbitrary labels as meta information
      items:
        $ref: '#/components/schemas/AiScenarioLabel'
    AiLabelList:
      type: array
      description: Arbitrary labels as meta information
      items:
        $ref: '#/components/schemas/AiLabel'
    AiScenarioLabel:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: '#/components/schemas/AiScenarioLabelKey'
        value:
          $ref: '#/components/schemas/AiLabelValue'
    AiLabel:
      type: object
      required:
        - key
        - value
      properties:
        key:
          $ref: '#/components/schemas/AiLabelKey'
        value:
          $ref: '#/components/schemas/AiLabelValue'
    AiLabelValue:
      type: string
      maxLength: 5000
    AiScenarioLabelKey:
      type: string
      example: scenarios.ai.sap.com/s4hana-version
      maxLength: 256
      pattern: ^(scenarios|ext)\.ai\.sap\.com\/[\w\.-]+$
    AiLabelKey:
      type: string
      example: ext.ai.sap.com/s4hana-version
      maxLength: 256
      pattern: ^ext\.ai\.sap\.com\/[\w\.-]+$
    AiScenarioId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description: ID of the scenario
    AiScenarioList:
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/AiScenario'
      required:
        - count
        - resources
    AiModelList:
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/AiModelBaseData'
      required:
        - count
        - resources
    AiModelBaseData:
      type: object
      required:
        - model
        - executableId
        - description
        - versions
      properties:
        model:
          type: string
          description: Name of the model
        executableId:
          $ref: '#/components/schemas/AiExecutableId'
        description:
          type: string
          description: Description of the model and its capabilities
        versions:
          $ref: '#/components/schemas/AiModelVersionList'
    AiModelVersionList:
      type: array
      description: List of model versions that the model object has
      items:
        $ref: '#/components/schemas/AiModelVersion'
    AiModelVersion:
      type: object
      description: Model version information including whether it is latest version
      required:
        - name
        - isLatest
      properties:
        name:
          type: string
          description: Name of model version
        isLatest:
          type: boolean
          description: Displays whether it is the latest version offered for the model
    AiVersion:
      type: object
      required:
        - id
        - createdAt
        - modifiedAt
      properties:
        description:
          $ref: '#/components/schemas/AiVersionDescription'
        id:
          $ref: '#/components/schemas/AiVersionId'
        scenarioId:
          $ref: '#/components/schemas/AiScenarioId'
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
        modifiedAt:
          type: string
          format: date-time
          description: Timestamp of latest resource modification
    AiVersionList:
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/AiVersion'
      required:
        - count
        - resources
    AiExecutable:
      description:
        'An ML executable consists of a set of ML tasks, flows between
        tasks, dependencies between tasks, models (or model versions?).

        '
      type: object
      required:
        - name
        - id
        - versionId
        - deployable
        - createdAt
        - modifiedAt
      properties:
        labels:
          $ref: '#/components/schemas/AiLabelList'
        name:
          type: string
          description: Name of the executable
        description:
          type: string
          description: Description of the executable
        id:
          $ref: '#/components/schemas/AiExecutableId'
        scenarioId:
          $ref: '#/components/schemas/AiScenarioId'
        versionId:
          $ref: '#/components/schemas/AiVersionId'
        parameters:
          $ref: '#/components/schemas/AiExecutableParameterList'
        inputArtifacts:
          $ref: '#/components/schemas/AiExecutableArtifactList'
        outputArtifacts:
          $ref: '#/components/schemas/AiExecutableArtifactList'
        deployable:
          type: boolean
          description: Whether this executable is deployable
          example: false
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
        modifiedAt:
          type: string
          format: date-time
          description: Timestamp of latest resource modification
    AiExecutableId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description: ID of the executable
    AiExecutableList:
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/AiExecutable'
      required:
        - count
        - resources
    AiExecutableParameter:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the executable parameter
        description:
          type: string
          description: Description of the signature argument
        default:
          type: string
          description: Default value of the signature argument
        type:
          type: string
          enum:
            - string
          description: Type of the executable parameter
    AiExecutableParameterList:
      type: array
      description: Executable parameters
      items:
        $ref: '#/components/schemas/AiExecutableParameter'
    AiExecutableArtifact:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Name of the executable input artifacts
        kind:
          type: string
          description: Artifact kind (model, dataset, other)
        description:
          type: string
          description: Description of the signature argument
        labels:
          $ref: '#/components/schemas/AiLabelList'
    AiExecutableArtifactList:
      type: array
      description: Executable parameters
      items:
        $ref: '#/components/schemas/AiExecutableArtifact'
    AiConfiguration:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/AiConfigurationName'
        executableId:
          $ref: '#/components/schemas/AiExecutableId'
        scenarioId:
          $ref: '#/components/schemas/AiScenarioId'
        parameterBindings:
          $ref: '#/components/schemas/AiParameterArgumentBindingList'
        inputArtifactBindings:
          $ref: '#/components/schemas/AiArtifactArgumentBindingList'
        id:
          $ref: '#/components/schemas/AiConfigurationId'
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
        scenario:
          type: object
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/AiScenario'
            - {}
      required:
        - name
        - executableId
        - scenarioId
        - id
        - createdAt
    AiConfigurationBaseData:
      type: object
      required:
        - name
        - executableId
        - scenarioId
      properties:
        name:
          $ref: '#/components/schemas/AiConfigurationName'
        executableId:
          $ref: '#/components/schemas/AiExecutableId'
        scenarioId:
          $ref: '#/components/schemas/AiScenarioId'
        parameterBindings:
          $ref: '#/components/schemas/AiParameterArgumentBindingList'
        inputArtifactBindings:
          $ref: '#/components/schemas/AiArtifactArgumentBindingList'
    AiConfigurationName:
      type: string
      pattern: ^[\w\s.!?,;:\[\](){}<>"'=+*/\\^&%@~$#|-]*$
      maxLength: 256
      description: Name of the configuration
    AiConfigurationId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description: ID of the configuration
    AiParameterArgumentBinding:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          maxLength: 256
        value:
          type: string
          maxLength: 5000
      description: 'Required for execution

        Result of activation

        '
    AiParameterArgumentBindingList:
      type: array
      maxItems: 1000
      items:
        $ref: '#/components/schemas/AiParameterArgumentBinding'
    AiArtifactArgumentBinding:
      type: object
      required:
        - key
        - artifactId
      properties:
        key:
          type: string
          maxLength: 256
        artifactId:
          $ref: '#/components/schemas/AiArtifactId'
      description: 'Required for execution

        Result of activation

        '
    AiArtifactArgumentBindingList:
      type: array
      maxItems: 1000
      items:
        $ref: '#/components/schemas/AiArtifactArgumentBinding'
    AiConfigurationList:
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/AiConfiguration'
      required:
        - count
        - resources
    AiConfigurationCreationResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AiId'
        message:
          $ref: '#/components/schemas/AiConfigurationCreationResponseMessage'
      required:
        - id
        - message
    AiConfigurationCreationResponseMessage:
      type: string
      description: Message
      example: Configuration created
    AiDeploymentTargetStatus:
      type: string
      description: Status
      enum:
        - STOPPED
      example: STOPPED
    AiDeploymentStatus:
      type: string
      description: Deployment status
      enum:
        - PENDING
        - RUNNING
        - COMPLETED
        - DEAD
        - STOPPING
        - STOPPED
        - UNKNOWN
      example: COMPLETED
    AiDeploymentStatusMessage:
      type: string
      description: Deployment status message
      maxLength: 256
    AiDeploymentStatusDetails:
      type: object
      description: Current status details of the deployment
    AiExecutionStatus:
      type: string
      description: Execution status
      enum:
        - PENDING
        - RUNNING
        - COMPLETED
        - DEAD
        - STOPPING
        - STOPPED
        - UNKNOWN
      example: COMPLETED
    AiExecutionStatusMessage:
      type: string
      description: Execution status message
      maxLength: 256
    AiExecutionStatusDetails:
      type: object
      description: Current status details of the execution
    AiExecution:
      type: object
      description: Execution that may generate artifacts
      properties:
        id:
          $ref: '#/components/schemas/AiExecutionId'
        configurationId:
          $ref: '#/components/schemas/AiConfigurationId'
        configurationName:
          $ref: '#/components/schemas/AiConfigurationName'
        executableId:
          $ref: '#/components/schemas/AiExecutableId'
        scenarioId:
          $ref: '#/components/schemas/AiScenarioId'
        targetStatus:
          type: string
          description: Target status of the execution
          enum:
            - COMPLETED
            - RUNNING
            - STOPPED
            - DELETED
          example: STOPPED
        status:
          $ref: '#/components/schemas/AiExecutionStatus'
        statusMessage:
          $ref: '#/components/schemas/AiExecutionStatusMessage'
        outputArtifacts:
          $ref: '#/components/schemas/AiArtifactArray'
        executionScheduleId:
          $ref: '#/components/schemas/AiExecutionScheduleId'
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
        modifiedAt:
          type: string
          format: date-time
          description: Timestamp of latest resource modification
        submissionTime:
          type: string
          format: date-time
          description: Timestamp of job submitted
        startTime:
          type: string
          format: date-time
          description: Timestamp of job status changed to RUNNING
        completionTime:
          type: string
          format: date-time
          description: Timestamp of job status changed to COMPLETED/DEAD/STOPPED
      required:
        - id
        - configurationId
        - status
        - createdAt
        - modifiedAt
    AiExecutionId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description: ID of the execution
    AiExecutionList:
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/AiExecution'
      required:
        - count
        - resources
    AiExecutionCreationResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AiId'
        message:
          $ref: '#/components/schemas/AiExecutionCreationResponseMessage'
        status:
          $ref: '#/components/schemas/AiExecutionStatus'
      required:
        - id
        - message
    AiExecutionCreationResponseMessage:
      type: string
      description: Message
      example: Execution scheduled
    AiExecutionModificationRequest:
      type: object
      description:
        Request object for changing the target status of an execution (currently
        only STOPPED is supported)
      required:
        - targetStatus
      properties:
        targetStatus:
          type: string
          description:
            Desired target status of the execution (currently only STOPPED
            is supported)
          enum:
            - STOPPED
    AiExecutionModificationRequestWithIdentifier:
      required:
        - targetStatus
        - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AiExecutionId'
        targetStatus:
          type: string
          description:
            Desired target status of the execution (currently STOPPED and
            DELETED are supported)
          enum:
            - STOPPED
            - DELETED
      description:
        Request object for changing the target status of an execution (currently
        STOPPED and DELETED are supported)
    AiExecutionModificationRequestList:
      type: array
      items:
        $ref: '#/components/schemas/AiExecutionModificationRequestWithIdentifier'
      uniqueItems: true
      minItems: 1
      maxItems: 100
      example:
        - id: aa97b177-9383-4934-8543-0f91a7a0283a
          targetStatus: STOPPED
        - id: qweq32131-qwee-1231-8543-0f91a7a2e2e
          targetStatus: DELETED
    AiExecutionBulkModificationRequest:
      type: object
      description: Request object to change status of multiple executions
      properties:
        executions:
          $ref: '#/components/schemas/AiExecutionModificationRequestList'
    AiExecutionModificationResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AiId'
        message:
          $ref: '#/components/schemas/AiExecutionModificationResponseMessage'
      required:
        - id
        - message
    AiExecutionModificationResponseList:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/AiExecutionModificationResponse'
          - $ref: '#/components/schemas/AiApiErrorWithId'
    AiExecutionBulkModificationResponse:
      type: object
      description: Response object with array of executions and its status
      properties:
        executions:
          $ref: '#/components/schemas/AiExecutionModificationResponseList'
    AiExecutionDeletionResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AiId'
        message:
          $ref: '#/components/schemas/AiExecutionDeletionResponseMessage'
      required:
        - id
        - message
    AiExecutionDeletionResponseMessage:
      type: string
      description: Message
      example: Execution deletion scheduled
    AiExecutionModificationResponseMessage:
      type: string
      description: Message
      example: Execution modification scheduled
    AiExecutionResponseWithDetails:
      type: object
      description: Execution that may generate artifacts
      properties:
        id:
          $ref: '#/components/schemas/AiExecutionId'
        configurationId:
          $ref: '#/components/schemas/AiConfigurationId'
        configurationName:
          $ref: '#/components/schemas/AiConfigurationName'
        executableId:
          $ref: '#/components/schemas/AiExecutableId'
        scenarioId:
          $ref: '#/components/schemas/AiScenarioId'
        targetStatus:
          type: string
          description: Target status of the execution
          enum:
            - COMPLETED
            - RUNNING
            - STOPPED
            - DELETED
          example: STOPPED
        status:
          $ref: '#/components/schemas/AiExecutionStatus'
        statusMessage:
          $ref: '#/components/schemas/AiExecutionStatusMessage'
        outputArtifacts:
          $ref: '#/components/schemas/AiArtifactArray'
        executionScheduleId:
          $ref: '#/components/schemas/AiExecutionScheduleId'
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
        modifiedAt:
          type: string
          format: date-time
          description: Timestamp of latest resource modification
        submissionTime:
          type: string
          format: date-time
          description: Timestamp of job submitted
        startTime:
          type: string
          format: date-time
          description: Timestamp of job status changed to RUNNING
        completionTime:
          type: string
          format: date-time
          description: Timestamp of job status changed to COMPLETED/DEAD/STOPPED
        statusDetails:
          $ref: '#/components/schemas/AiExecutionStatusDetails'
      required:
        - id
        - configurationId
        - status
        - createdAt
        - modifiedAt
    AiExecutionSchedule:
      type: object
      description: Data about execution schedule
      required:
        - configurationId
        - cron
        - name
        - createdAt
        - modifiedAt
      properties:
        cron:
          $ref: '#/components/schemas/AiCron'
        name:
          maxLength: 256
          type: string
          description: Name of the execution schedule
        configurationId:
          $ref: '#/components/schemas/AiConfigurationId'
        start:
          type: string
          description:
            Timestamp, defining when the executions should start running
            periodically, defaults to now
          format: date-time
        end:
          type: string
          description: Timestamp, defining when the executions should stop running
          format: date-time
        id:
          $ref: '#/components/schemas/AiExecutionScheduleId'
        status:
          $ref: '#/components/schemas/AiExecutionScheduleStatus'
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
        modifiedAt:
          type: string
          format: date-time
          description: Timestamp of latest resource modification
    AiExecutionScheduleId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description: ID of the execution schedule
    AiExecutionScheduleStatus:
      type: string
      description: Execution Schedule Status
      enum:
        - ACTIVE
        - INACTIVE
      example: ACTIVE
    AiCron:
      type: string
      description: Cron defining the schedule to run the executions.
      example: 0 0 0 1 *
    AiExecutionScheduleCreationData:
      type: object
      description: Start and end an execution schedule.
      properties:
        cron:
          $ref: '#/components/schemas/AiCron'
        name:
          maxLength: 256
          type: string
          description: Name of the execution schedule
        configurationId:
          $ref: '#/components/schemas/AiConfigurationId'
        start:
          type: string
          description:
            Timestamp, defining when the executions should start running
            periodically, defaults to now
          format: date-time
        end:
          type: string
          description: Timestamp, defining when the executions should stop running
          format: date-time
      required:
        - configurationId
        - cron
        - name
    AiExecutionScheduleList:
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/AiExecutionSchedule'
      required:
        - count
        - resources
    AiExecutionScheduleModificationRequest:
      type: object
      description: Request object for changing the execution schedule
      properties:
        cron:
          $ref: '#/components/schemas/AiCron'
        start:
          type: string
          description:
            Timestamp, defining when the executions should start running
            periodically, defaults to now
          format: date-time
        end:
          type: string
          description: Timestamp, defining when the executions should stop running
          format: date-time
        configurationId:
          $ref: '#/components/schemas/AiConfigurationId'
        status:
          $ref: '#/components/schemas/AiExecutionScheduleStatus'
    AiExecutionScheduleModificationResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AiId'
        message:
          $ref: '#/components/schemas/AiExecutionScheduleModificationResponseMessage'
      required:
        - id
        - message
    AiExecutionScheduleModificationResponseMessage:
      type: string
      description: Message
      example: Execution Schedule modified
    AiExecutionScheduleDeletionResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AiId'
        message:
          $ref: '#/components/schemas/AiExecutionScheduleDeletionResponseMessage'
      required:
        - id
        - message
    AiExecutionScheduleDeletionResponseMessage:
      type: string
      description: Message
      example: Execution Schedule deleted
    AiExecutionScheduleCreationResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AiId'
        message:
          $ref: '#/components/schemas/AiExecutionScheduleCreationResponseMessage'
      required:
        - id
        - message
    AiExecutionScheduleCreationResponseMessage:
      type: string
      description: Message
      example: Execution Schedule created
    AiDeployment:
      type: object
      description: Detailed data about a deployment
      properties:
        id:
          $ref: '#/components/schemas/AiDeploymentId'
        deploymentUrl:
          $ref: '#/components/schemas/AiDeploymentUrl'
        configurationId:
          $ref: '#/components/schemas/AiConfigurationId'
        configurationName:
          $ref: '#/components/schemas/AiConfigurationName'
        executableId:
          $ref: '#/components/schemas/AiExecutableId'
        scenarioId:
          $ref: '#/components/schemas/AiScenarioId'
        status:
          $ref: '#/components/schemas/AiDeploymentStatus'
        statusMessage:
          $ref: '#/components/schemas/AiDeploymentStatusMessage'
        targetStatus:
          type: string
          description: Deployment target status
          enum:
            - RUNNING
            - STOPPED
            - DELETED
        lastOperation:
          type: string
          description: Last operation applied to this deployment.
          anyOf:
            - enum:
                - CREATE
                - UPDATE
                - DELETE
                - CASCADE-UPDATE
            - {}
        latestRunningConfigurationId:
          type: string
          pattern: ^[\w.-]{4,64}$
          example: aa97b177-9383-4934-8543-0f91a7a0283a
          description:
            configurationId that was running before a PATCH operation has
            modified the configurationId of the deployment. This can be used for a
            manual rollback in case the new configurationId results in a DEAD deployment
        ttl:
          $ref: '#/components/schemas/AiDeploymentTimeToLive'
        details:
          $ref: '#/components/schemas/AiDeploymentDetails'
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
        modifiedAt:
          type: string
          format: date-time
          description: Timestamp of latest resource modification
        submissionTime:
          type: string
          format: date-time
          description: Timestamp of job submitted
        startTime:
          type: string
          format: date-time
          description: Timestamp of job status changed to RUNNING
        completionTime:
          type: string
          format: date-time
          description: Timestamp of job status changed to COMPLETED/DEAD/STOPPED
      required:
        - id
        - configurationId
        - status
        - createdAt
        - modifiedAt
    AiDeploymentId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description: ID of the deployment
    AiDeploymentUrl:
      description: Consumption URL of the deployment
      type: string
      format: url
    AiDeploymentList:
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/AiDeployment'
      required:
        - count
        - resources
    AiDeploymentCreationResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AiId'
        message:
          $ref: '#/components/schemas/AiDeploymentCreationResponseMessage'
        deploymentUrl:
          $ref: '#/components/schemas/AiDeploymentUrl'
        status:
          $ref: '#/components/schemas/AiExecutionStatus'
        ttl:
          $ref: '#/components/schemas/AiDeploymentTimeToLive'
      required:
        - id
        - message
    AiDeploymentCreationResponseMessage:
      type: string
      description: Message
      example: Deployment scheduled
    AiEnactmentCreationRequest:
      type: object
      description: Request object for creating an execution or an deployment
      required:
        - configurationId
      properties:
        configurationId:
          $ref: '#/components/schemas/AiConfigurationId'
    AiDeploymentCreationRequest:
      type: object
      description: Request object for creating an execution or an deployment
      required:
        - configurationId
      properties:
        ttl:
          $ref: '#/components/schemas/AiDeploymentTimeToLive'
        configurationId:
          $ref: '#/components/schemas/AiConfigurationId'
    AiDeploymentModificationRequest:
      type: object
      description:
        Request object for changing the target status of a deployment (currently
        only STOPPED is supported)
      properties:
        targetStatus:
          $ref: '#/components/schemas/AiDeploymentTargetStatus'
        configurationId:
          $ref: '#/components/schemas/AiConfigurationId'
    AiDeploymentModificationRequestWithIdentifier:
      type: object
      required:
        - targetStatus
        - id
      properties:
        id:
          $ref: '#/components/schemas/AiDeploymentId'
        targetStatus:
          type: string
          description: Deployment target status
          enum:
            - STOPPED
            - DELETED
      description:
        Request object for changing the target status of a deployment (
        STOPPED and DELETED are supported)
    AiDeploymentModificationRequestList:
      type: array
      items:
        $ref: '#/components/schemas/AiDeploymentModificationRequestWithIdentifier'
      uniqueItems: true
      minItems: 1
      maxItems: 100
      example:
        - id: aa97b177-9383-4934-8543-0f91a7a0283a
          targetStatus: STOPPED
        - id: qweq32131-qwee-1231-8543-0f91a7a2e2e
          targetStatus: DELETED
    AiDeploymentBulkModificationRequest:
      type: object
      description: Request object for changing the target status of multiple deployments
      properties:
        deployments:
          $ref: '#/components/schemas/AiDeploymentModificationRequestList'
    AiDeploymentModificationResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AiId'
        message:
          $ref: '#/components/schemas/AiDeploymentModificationResponseMessage'
      required:
        - id
        - message
    AiDeploymentModificationResponseList:
      type: array
      items:
        oneOf:
          - $ref: '#/components/schemas/AiDeploymentModificationResponse'
          - $ref: '#/components/schemas/AiApiErrorWithId'
    AiDeploymentBulkModificationResponse:
      type: object
      description: Response object with array of deployments
      properties:
        deployments:
          $ref: '#/components/schemas/AiDeploymentModificationResponseList'
    AiDeploymentDeletionResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/AiId'
        message:
          $ref: '#/components/schemas/AiDeploymentDeletionResponseMessage'
      required:
        - id
        - message
    AiDeploymentModificationResponseMessage:
      type: string
      description: Message
      example: Deployment modification scheduled
    AiDeploymentDeletionResponseMessage:
      type: string
      description: Message
      example: Deployment deletion scheduled
    AiDeploymentResponseWithDetails:
      type: object
      description: Detail properties of the deployment
      properties:
        id:
          $ref: '#/components/schemas/AiDeploymentId'
        deploymentUrl:
          $ref: '#/components/schemas/AiDeploymentUrl'
        configurationId:
          $ref: '#/components/schemas/AiConfigurationId'
        configurationName:
          $ref: '#/components/schemas/AiConfigurationName'
        executableId:
          $ref: '#/components/schemas/AiExecutableId'
        scenarioId:
          $ref: '#/components/schemas/AiScenarioId'
        status:
          $ref: '#/components/schemas/AiDeploymentStatus'
        statusMessage:
          $ref: '#/components/schemas/AiDeploymentStatusMessage'
        targetStatus:
          type: string
          description: Deployment target status
          enum:
            - RUNNING
            - STOPPED
            - DELETED
        lastOperation:
          type: string
          description: Last operation applied to this deployment.
          anyOf:
            - enum:
                - CREATE
                - UPDATE
                - DELETE
                - CASCADE-UPDATE
            - {}
        latestRunningConfigurationId:
          type: string
          pattern: ^[\w.-]{4,64}$
          example: aa97b177-9383-4934-8543-0f91a7a0283a
          description:
            configurationId that was running before a PATCH operation has
            modified the configurationId of the deployment. This can be used for a
            manual rollback in case the new configurationId results in a DEAD deployment
        ttl:
          $ref: '#/components/schemas/AiDeploymentTimeToLive'
        details:
          $ref: '#/components/schemas/AiDeploymentDetails'
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
        modifiedAt:
          type: string
          format: date-time
          description: Timestamp of latest resource modification
        submissionTime:
          type: string
          format: date-time
          description: Timestamp of job submitted
        startTime:
          type: string
          format: date-time
          description: Timestamp of job status changed to RUNNING
        completionTime:
          type: string
          format: date-time
          description: Timestamp of job status changed to COMPLETED/DEAD/STOPPED
        statusDetails:
          $ref: '#/components/schemas/AiDeploymentStatusDetails'
      required:
        - id
        - configurationId
        - status
        - createdAt
        - modifiedAt
    AiBackendDetails:
      type: object
      description: backend-specific details of the deployment
    AiScalingDetails:
      type: object
      description: Scaling details of a deployment
      example:
        backendDetails:
          predictor:
            minReplicas: 0
            maxReplicas: 2
            runningReplicas: 1
      properties:
        backendDetails:
          $ref: '#/components/schemas/AiBackendDetails'
    AiResourcesDetails:
      type: object
      description: Resources details of a deployment
      example:
        backendDetails:
          predictor:
            resourcePlan: starter
      properties:
        backendDetails:
          $ref: '#/components/schemas/AiBackendDetails'
    AiDeploymentDetails:
      type: object
      description:
        'Detail information about a deployment (including predefined sections:
        `scaling` and `resources`).

        JSON String representation of this object is limited to 5000 characters

        '
      properties:
        scaling:
          $ref: '#/components/schemas/AiScalingDetails'
        resources:
          $ref: '#/components/schemas/AiResourcesDetails'
    AiDeploymentTimeToLive:
      type: string
      description:
        Time to live for a deployment. Its value can be either null or
        a number followed by the unit (any of following values, minutes(m|M), hours(h|H)
        or days(d|D))
      nullable: true
      pattern: ^[0-9]+[m,M,h,H,d,D]$
      example: 24H
    AiArtifact:
      description:
        'Base data of the artifact; this is the data that can be provided
        when the artifact is created; `name` and `kind` are required because they
        constitute important semantic filtering criteria for use in training / inference
        executables (`name` is a semantic handle of the artifact within a scenario
        and `kind` specifies the type of usage, e.g. you would only want to allow
        models in the model operator).

        '
      type: object
      properties:
        labels:
          $ref: '#/components/schemas/AiLabelList'
        name:
          $ref: '#/components/schemas/AiArtifactName'
        kind:
          type: string
          enum:
            - model
            - dataset
            - resultset
            - other
          description: Kind of the artifact, i.e. model or dataset
        url:
          $ref: '#/components/schemas/AiArtifactUrl'
        description:
          $ref: '#/components/schemas/AiArtifactDescription'
        id:
          $ref: '#/components/schemas/AiArtifactId'
        scenarioId:
          $ref: '#/components/schemas/AiScenarioId'
        configurationId:
          $ref: '#/components/schemas/AiConfigurationId'
        executionId:
          $ref: '#/components/schemas/AiExecutionId'
        createdAt:
          type: string
          description: Timestamp of resource creation
          format: date-time
        modifiedAt:
          type: string
          format: date-time
          description: Timestamp of latest resource modification
        scenario:
          type: object
          nullable: true
          anyOf:
            - $ref: '#/components/schemas/AiScenario'
            - {}
      required:
        - name
        - kind
        - url
        - id
        - scenarioId
        - createdAt
        - modifiedAt
    AiArtifactDescription:
      type: string
      maxLength: 5000
      description: Description of the artifact
    AiArtifactPostData:
      type: object
      description:
        'Base data of the artifact; this is the data that can be provided
        when the artifact is created; `name` and `kind` are required because they
        constitute important semantic filtering criteria for use in training / inference
        executables (`name` is a semantic handle of the artifact within a scenario
        and `kind` specifies the type of usage, e.g. you would only want to allow
        models in the model operator).

        '
      required:
        - name
        - kind
        - url
        - scenarioId
      properties:
        labels:
          $ref: '#/components/schemas/AiLabelList'
        name:
          $ref: '#/components/schemas/AiArtifactName'
        kind:
          type: string
          enum:
            - model
            - dataset
            - resultset
            - other
          description: Kind of the artifact, i.e. model or dataset
        url:
          $ref: '#/components/schemas/AiArtifactUrl'
        description:
          $ref: '#/components/schemas/AiArtifactDescription'
        scenarioId:
          $ref: '#/components/schemas/AiScenarioId'
    AiArtifactCreationResponse:
      type: object
      required:
        - id
        - message
        - url
      properties:
        id:
          $ref: '#/components/schemas/AiId'
        message:
          $ref: '#/components/schemas/AiArtifactCreationResponseMessage'
        url:
          $ref: '#/components/schemas/AiArtifactUrl'
    AiArtifactCreationResponseMessage:
      type: string
      description: Message
      example: Artifact acknowledged
    AiArtifactId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description: ID of the artifact
    AiArtifactName:
      type: string
      pattern: ^[\w\s.!?,;:\[\](){}<>"'=+*/\\^&%@~$#|-]*$
      maxLength: 256
      description: Name of the artifact
    AiArtifactUrl:
      type: string
      pattern: ([a-z0-9-]+):\/\/.+
      maxLength: 1024
      example: https://example.com/some_path
      description: 'Reference to the location of the artifact.

        '
    AiArtifactList:
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          $ref: '#/components/schemas/AiArtifactArray'
      required:
        - count
        - resources
    AiArtifactArray:
      type: array
      items:
        $ref: '#/components/schemas/AiArtifact'
    AiLogCommonData:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/AiLogCommonResult'
    AiLogCommonResult:
      type: array
      items:
        $ref: '#/components/schemas/AiLogCommonResultItem'
    AiLogCommonResultItem:
      type: object
      description: Common log record.
      properties:
        timestamp:
          description: Datetime in RFC 3339.
          type: string
          format: date-time
          example: '2021-05-19T00:00:14.347+00:00'
        msg:
          description: message content.
          type: string
    AiId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description: Generic ID
    AiVersionId:
      description: Version ID
      type: string
    AiVersionDescription:
      type: string
      maxLength: 5000
      example: This is version v1
      description: Version description
    AiCreationResponseMessage:
      type: string
      description: Message
      example: Created
    AiUrl:
      type: string
      format: url
    AiApiErrorWithId:
      type: object
      required:
        - id
        - error
      properties:
        id:
          $ref: '#/components/schemas/AiId'
        error:
          $ref: '#/components/schemas/AiApiError'
    AiApiError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Descriptive error code (not http status code)
        message:
          type: string
          description: Plaintext error description
        requestId:
          type: string
          description: ID of the individual request
        target:
          type: string
          description: Invoked URL
        details:
          description: Optional details of the error message
          type: object
    BckndId:
      type: string
      pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
      description: Generic ID
    BckndMessage:
      type: string
      description: Message
    BckndName:
      type: string
      description: Name
    BckndCreationResponseMessage:
      type: string
      description: Message
      example: Created
    BckndUrl:
      type: string
      format: url
    BckndResourceGroupList:
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/BckndResourceGroup'
      required:
        - count
        - resources
    BckndResourceGroupBase:
      type: object
      properties:
        resourceGroupId:
          description: resource group id
          type: string
        tenantId:
          description: tenant id
          type: string
        zoneId:
          description: zone id
          type: string
    BckndResourceGroup:
      type: object
      properties:
        resourceGroupId:
          description: resource group id
          type: string
        tenantId:
          description: tenant id
          type: string
        zoneId:
          description: zone id
          type: string
        createdAt:
          description: Timestamp of resource group creation
          type: string
          format: date-time
        labels:
          $ref: '#/components/schemas/BckndResourceGroupLabels'
        status:
          description: aggregated status of the onboarding process
          type: string
          enum:
            - PROVISIONED
            - ERROR
            - PROVISIONING
        statusMessage:
          description: status message
          type: string
      required:
        - status
        - createdAt
        - resourceGroupId
    BckndInternalResourceGroup:
      type: object
      properties:
        resourceGroupId:
          description: resource group id
          type: string
        tenantId:
          description: tenant id
          type: string
        zoneId:
          description: zone id
          type: string
        createdAt:
          description: Timestamp of resource group creation
          type: string
          format: date-time
        labels:
          $ref: '#/components/schemas/BckndInternalResourceGroupLabels'
        status:
          description: aggregated status of the onboarding process
          type: string
          enum:
            - PROVISIONED
            - ERROR
            - PROVISIONING
        statusMessage:
          description: status message
          type: string
        annotations:
          $ref: '#/components/schemas/BckndInternalResourceGroupAnnotations'
      required:
        - status
        - createdAt
        - resourceGroupId
    BckndResourceGroupsPostRequest:
      type: object
      properties:
        resourceGroupId:
          description: resource group id
          type: string
          pattern: ^[a-zA-Z0-9][a-zA-Z0-9.-]{1,251}[a-zA-Z0-9]$
          minLength: 3
          maxLength: 253
        labels:
          $ref: '#/components/schemas/BckndResourceGroupLabels'
    BckndResourceGroupLabels:
      type: array
      description: Arbitrary labels as meta information
      items:
        $ref: '#/components/schemas/BckndResourceGroupLabel'
    BckndResourceGroupLabel:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          pattern: ^ext.ai.sap.com/(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]){1,48}$
          maxLength: 63
          example: ext.ai.sap.com/my-label
        value:
          type: string
          maxLength: 5000
    BckndInternalResourceGroupLabels:
      type: array
      description: Arbitrary labels as meta information
      items:
        $ref: '#/components/schemas/BckndInternalResourceGroupLabel'
    BckndInternalResourceGroupLabel:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          pattern: ^internal.ai.sap.com/(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]){1,43}$
          maxLength: 63
          example: internal.ai.sap.com/my-label
        value:
          type: string
          maxLength: 5000
    BckndInternalResourceGroupAnnotations:
      type: array
      description: Arbitrary annotations as meta information
      items:
        $ref: '#/components/schemas/BckndInternalResourceGroupAnnotation'
    BckndInternalResourceGroupAnnotation:
      type: object
      required:
        - key
        - value
      properties:
        key:
          type: string
          pattern: ^internal.ai.sap.com/(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]){1,43}$
          maxLength: 63
          example: internal.ai.sap.com/my-annotation
        value:
          type: string
          maxLength: 5000
    BckndResourceGroupDeletionResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BckndId'
        message:
          $ref: '#/components/schemas/BckndResourceGroupDeletionResponseMessage'
      required:
        - id
        - message
    BckndResourceGroupDeletionResponseMessage:
      type: string
      description: Message
      example: Resource Group deletion scheduled
    BckndResourceGroupPatchRequest:
      type: object
      properties:
        labels:
          $ref: '#/components/schemas/BckndResourceGroupLabels'
    BckndEvent:
      type: object
      properties:
        tenantId:
          description: tenant id
          type: string
        action:
          type: string
          enum:
            - PROVISION
            - DEPROVISION
        state:
          type: string
          enum:
            - SUCCESSFUL
            - FAILED
            - PENDING
        description:
          description: describes the event state
          type: string
        createdAt:
          type: string
          format: date-time
          example: '2017-09-28T08:56:23.275Z'
    BckndTenant:
      type: object
      properties:
        tenantId:
          description: tenant id
          type: string
        zoneId:
          description: zone id
          type: string
        realSubaccountId:
          description: real sub account id
          type: string
        servicePlan:
          description: service plan
          type: string
    BckndobjectStoreSecretWithSensitiveDataRequest:
      type: object
      description:
        This represents all the meta-data and extra information to be stored
        as a k8-secret
      required:
        - name
        - type
        - data
      properties:
        name:
          type: string
          description:
            Name of the object store for the secret object to be created.
            Can be used later on check for existence of the secret.
          example: myobjectstore
        type:
          type: string
          description: Storage type e.g. S3, GCS,...
          example: S3
        bucket:
          type: string
          description: Bucket to be used
          example: mybucket1
        endpoint:
          type: string
          description: Optional parameter - URL of the storage server (S3 only)
          example: www.example.com
        region:
          type: string
          description: Optional parameter - Region of the storage server (S3 only)
          example: eu
        pathPrefix:
          type: string
          description: prefix folder to be added to storage path
          example: mp-api
        verifyssl:
          type: string
          description: 0, 1 flag for the KF-serving annotation - serving.kubeflow.org/s3-verifyssl
          example: '0'
        usehttps:
          type: string
          description: 0, 1 flag for KF-serving annotations - serving.kubeflow.org/s3-usehttps
          example: '1'
          default: '1'
        data:
          type: object
          description: key:value pairs of data
          writeOnly: true
    BckndobjectStoreSecretWithSensitiveDataRequestForPostCall:
      type: object
      description:
        This represents all the meta-data and extra information to be stored
        as a k8-secret
      required:
        - name
        - type
        - data
      properties:
        name:
          type: string
          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
          maxLength: 233
          description:
            Name of the object store for the secret object to be created.
            Can be used later on check for existence of the secret.
          example: myobjectstore
        type:
          type: string
          description: Storage type e.g. S3, GCS,...
          example: S3
        bucket:
          type: string
          description: Bucket to be used
          example: mybucket1
        endpoint:
          type: string
          description: Optional parameter - URL of the storage server (S3 only)
          example: www.example.com
        region:
          type: string
          description: Optional parameter - Region of the storage server (S3 only)
          example: eu
        pathPrefix:
          type: string
          description: prefix folder to be added to storage path
          example: mp-api
        verifyssl:
          type: string
          description: 0, 1 flag for the KF-serving annotation - serving.kubeflow.org/s3-verifyssl
          example: '0'
        usehttps:
          type: string
          description: 0, 1 flag for KF-serving annotations - serving.kubeflow.org/s3-usehttps
          example: '1'
          default: '1'
        data:
          type: object
          description: key:value pairs of data
          writeOnly: true
    BckndobjectStoreSecretStatusResponse:
      description:
        This represents a list of meta-data of a stored secret. The 'data'
        field of the secret is never retrieved.
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/BckndobjectStoreSecretStatus'
      required:
        - count
        - resources
    BckndobjectStoreSecretStatus:
      type: object
      description:
        This represents the meta-data of a stored secret. The 'data' field
        of the secret is never retrieved.
      properties:
        metadata:
          description:
            Key value pairs of meta-data assigned to the secret when the
            secret was being created.
          type: object
          properties:
            serving.kubeflow.org/s3-usehttps:
              type: string
              description: 0 and 1 values for setting the flag
              example: '1'
            serving.kubeflow.org/s3-verifyssl:
              type: string
              description: 0 and 1 values for setting the flag
              example: '0'
            serving.kubeflow.org/s3-endpoint:
              type: string
              description: Annotation for endpoint required by KF_Serving
              example: some_endpoint
            serving.kubeflow.org/s3-region:
              type: string
              description: Annotation for region required by KF_Serving
              example: EU
            storage.ai.sap.com/type:
              type: string
              description: Storage type of the secret
              example: S3
            storage.ai.sap.com/bucket:
              type: string
              description: bucket assigned to the secret on creation
              example: my_bucket
            storage.ai.sap.com/endpoint:
              type: string
              description: Endpoint assigned to the secret on creation
              example: some_endpoint
            storage.ai.sap.com/region:
              type: string
              description: Region of the storage server
              example: EU
            storage.ai.sap.com/pathPrefix:
              type: string
              description: Pathprefix type assigned to the secret on creation.
              example: mnist_folder
            storage.ai.sap.com/hdfsNameNode:
              type: string
              description: name node of the HDFS file system
              example: https://c3272xxxxxfa8f.files.hdl.canary-eu10.hanacloud.ondemand.com
            storage.ai.sap.com/headers:
              type: string
              description: headers for webHDFS and other protocols
              example: '{"x-sap-filecontainer": "c32727xxxxxxx322dcfa8f"}'
            storage.ai.sap.com/containerUri:
              type: string
              description: container uri of azure storage
              example: https://sapcv842awjkfb2.blob.core.windows.net/sapcp-osaas-xxx-xxxx-xxxx-xxxx-xxxx-zrs
            storage.ai.sap.com/subscriptionId:
              type: string
              description: subscription id
              example: dgewg2-gkrwnegiw
            storage.ai.sap.com/tenantId:
              type: string
              description: tenant id
              example: dawd2120-dadwad2
            storage.ai.sap.com/projectId:
              type: string
              description: project id of google cloud platform
              example: sap-gcp-oaas-us31-1
        name:
          description: Name of objectstore
          type: string
          example: myobjectstore-object-store-secret
    BckndobjectStoreSecretDeletionResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BckndId'
        message:
          $ref: '#/components/schemas/BckndobjectStoreSecretDeletionResponseMessage'
      required:
        - id
        - message
    BckndobjectStoreSecretDeletionResponseMessage:
      type: string
      description: Message
      example: Object Store Secret has been deleted
    BckndobjectStoreSecretCreationResponse:
      type: object
      description: Message
      example: Created
      properties:
        message:
          $ref: '#/components/schemas/BckndobjectStoreSecretCreationResponseMessage'
    BckndobjectStoreSecretCreationResponseMessage:
      type: string
      description: Message
      example: Secret has been created
    BckndobjectStoreSecretModificationResponseMessage:
      type: string
      description: Message
      example: Secret has been modified
    BckndobjectStoreSecretModificationResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BckndId'
        message:
          $ref: '#/components/schemas/BckndobjectStoreSecretModificationResponseMessage'
      required:
        - id
        - message
    BcknddockerRegistryNameComponent:
      description: Name of the docker Registry store for the secret.
      type: string
      pattern: ^[a-z0-9](?:_?[a-z0-9\.\-]+)*[a-z0-9]$
      maxLength: 63
      example: mydockeregistry
    BcknddockerRegistrySecretWithSensitiveDataRequest:
      type: object
      description:
        This represents all the meta-data and extra information to be stored
        as a k8-secret
      required:
        - data
      properties:
        data:
          type: object
          required:
            - .dockerconfigjson
          description: key:value pairs of data
          writeOnly: true
          additionalProperties: false
          properties:
            .dockerconfigjson:
              type: string
              description: .dockerconfigjson data
    BcknddockerRegistrySecretStatusResponse:
      description:
        This represents a list of meta-data of a stored secret. The 'data'
        field of the secret is never retrieved.
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/BcknddockerRegistrySecretStatus'
      required:
        - count
        - resources
    BcknddockerRegistrySecretStatus:
      type: object
      description:
        This represents the meta-data of a stored secret. The 'data' field
        of the secret is never retrieved.
      properties:
        name:
          description: Name of dockerRegistryStore
          type: string
          example: mydockeregistry
    BcknddockerRegistrySecretDeletionResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BckndId'
        message:
          $ref: '#/components/schemas/BcknddockerRegistrySecretDeletionResponseMessage'
      required:
        - id
        - message
    BcknddockerRegistrySecretDeletionResponseMessage:
      type: string
      description: Message
      example: Docker Registry Secret has been deleted
    BcknddockerRegistrySecretCreationResponse:
      type: object
      description: Message
      example: Created
      properties:
        message:
          $ref: '#/components/schemas/BcknddockerRegistrySecretCreationResponseMessage'
    BcknddockerRegistrySecretCreationResponseMessage:
      type: string
      description: Message
      example: Secret has been created
    BcknddockerRegistrySecretModificationResponseMessage:
      type: string
      description: Message
      example: Secret has been modified
    BcknddockerRegistrySecretModificationResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BckndId'
        message:
          $ref: '#/components/schemas/BcknddockerRegistrySecretModificationResponseMessage'
      required:
        - id
        - message
    BckndGenericSecretData:
      description: Base64 encoded secret data
      type: object
      additionalProperties:
        type: string
    BckndGenericSecretPostBody:
      type: object
      required:
        - name
        - data
      properties:
        name:
          description: The name of the secret
          type: string
          minLength: 1
          maxLength: 252
          pattern: ^[a-z0-9\-\.]+$
        data:
          $ref: '#/components/schemas/BckndGenericSecretData'
    BckndGenericSecretPatchBody:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/BckndGenericSecretData'
    BckndGenericSecretDataResponse:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/BckndMessage'
        name:
          $ref: '#/components/schemas/BckndName'
    BckndGenericSecretDetails:
      type: object
      properties:
        name:
          description: Name of the secret
          type: string
        createdAt:
          description: Timestamp at which secret was created
          type: string
    BckndListGenericSecretsResponse:
      description:
        This represents a list of meta-data of the secret. The 'data' field
        of the secret is never retrieved.
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/BckndGenericSecretDetails'
      required:
        - count
        - resources
    BckndArgoCDRepositoryData:
      type: object
      required:
        - url
        - username
        - password
      properties:
        name:
          description: Name of the repository
          type: string
          minLength: 1
          maxLength: 51
          pattern: ^[a-z0-9\-]+$
        url:
          description: URL of the repository to synchronise
          type: string
        username:
          description: Username for read-access to the repository
          type: string
        password:
          description: Password for read-access to the repository
          type: string
    BckndArgoCDRepositoryCredentials:
      type: object
      required:
        - username
        - password
      properties:
        username:
          description: Username for read-access to the repository
          type: string
        password:
          description: Password for read-access to the repository
          type: string
    BckndArgoCDRepositoryDataResponse:
      description: This represents a list of GitOps repositories for the tenant.
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/BckndArgoCDRepositoryDetails'
      required:
        - count
        - resources
    BckndArgoCDRepositoryCreationResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BckndId'
        message:
          $ref: '#/components/schemas/BckndArgoCDRepositoryCreationResponseMessage'
      required:
        - id
        - message
    BckndArgoCDRepositoryCreationResponseMessage:
      type: string
      description: Message
      example: Repository has been on-boarded
    BckndArgoCDRepositoryDetails:
      type: object
      description: Repository details
      properties:
        name:
          description: The name of the repository
          type: string
        url:
          description: The repository URL
          type: string
        status:
          description: The status of the repository's on-boarding
          type: string
          enum:
            - ERROR
            - IN-PROGRESS
            - COMPLETED
          example: COMPLETED
    BckndArgoCDRepositoryDeletionResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BckndId'
        message:
          $ref: '#/components/schemas/BckndArgoCDRepositoryDeletionResponseMessage'
      required:
        - id
        - message
    BckndArgoCDRepositoryDeletionResponseMessage:
      type: string
      description: Message
      example: The repository has been off-boarded.
    BckndArgoCDRepositoryModificationResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BckndId'
        message:
          $ref: '#/components/schemas/BckndArgoCDRepositoryModificationResponseMessage'
      required:
        - id
        - message
    BckndArgoCDRepositoryModificationResponseMessage:
      type: string
      description: Message
      example: ArgoCD application has been updated
    BckndArgoCDApplicationBaseData:
      type: object
      required:
        - repositoryUrl
        - revision
        - path
      properties:
        repositoryUrl:
          description: URL of the repository to synchronise
          type: string
        revision:
          description: revision to synchronise
          type: string
        path:
          description: path within the repository to synchronise
          type: string
    BckndArgoCDApplicationData:
      type: object
      properties:
        repositoryUrl:
          description: URL of the repository to synchronise
          type: string
        revision:
          description: revision to synchronise
          type: string
        path:
          description: path within the repository to synchronise
          type: string
        applicationName:
          description: ArgoCD application name
          type: string
          minLength: 3
          maxLength: 54
          pattern: ^[a-z0-9\-]+$
      required:
        - repositoryUrl
        - revision
        - path
    BckndAllArgoCDApplicationData:
      description: list of applications
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/BckndArgoCDApplicationData'
      required:
        - count
        - resources
    BckndArgoCDApplicationDataRepoName:
      type: object
      required:
        - repositoryName
        - revision
        - path
      properties:
        repositoryName:
          description: Name of the repository to synchronise
          type: string
        revision:
          description: revision to synchronise
          type: string
        path:
          description: path within the repository to synchronise
          type: string
        applicationName:
          description: ArgoCD application name
          type: string
          minLength: 3
          maxLength: 54
          pattern: ^[a-z0-9\-]+$
    BckndArgoCDApplicationStatus:
      type: object
      description: ArgoCD application definition and status
      properties:
        healthStatus:
          description: ArgoCD application health status
          type: string
        syncStatus:
          description: ArgoCD application sync status
          type: string
        message:
          description: ArgoCD application health status message
          type: string
        source:
          description: Information about the ArgoCD application itself
          type: object
          properties:
            repoURL:
              description: URL of the repository
              type: string
            path:
              description: Path of the repository
              type: string
            revision:
              description: Revision number of the ArgoCD application
              type: string
        syncFinishedAt:
          description:
            Gets the timestamp information related to the sync state of
            the ArgoCD application
          type: string
        syncStartedAt:
          description:
            Get timestamp information related to the sync state of the
            ArgoCD application
          type: string
        reconciledAt:
          description:
            Get timestamp information related to the sync state of the
            ArgoCD application
          type: string
        syncResourcesStatus:
          description:
            Status of all resources that need to be synchronized with the
            gitops repo
          type: array
          items:
            type: object
            properties:
              name:
                description: ArgoCD application object name
                type: string
              kind:
                description: ArgoCD application object kind
                type: string
              status:
                description: ArgoCD application object sync status
                type: string
              message:
                description: ArgoCD application object message
                type: string
        syncRessourcesStatus:
          deprecated: true
          description:
            Status of all resources that need to be synchronized with the
            gitops repo. Misspelled and deprecated, use syncResourcesStatus instead.
          type: array
          items:
            type: object
            properties:
              name:
                description: ArgoCD application object name
                type: string
              kind:
                description: ArgoCD application object kind
                type: string
              status:
                description: ArgoCD application object sync status
                type: string
              message:
                description: ArgoCD application object message
                type: string
    BckndArgoCDApplicationDeletionResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BckndId'
        message:
          $ref: '#/components/schemas/BckndArgoCDApplicationDeletionResponseMessage'
      required:
        - id
        - message
    BckndArgoCDApplicationDeletionResponseMessage:
      type: string
      description: Message
      example: ArgoCD application has been deleted
    BckndArgoCDApplicationCreationResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BckndId'
        message:
          $ref: '#/components/schemas/BckndArgoCDApplicationCreationResponseMessage'
      required:
        - id
        - message
    BckndArgoCDApplicationCreationResponseMessage:
      type: string
      description: Message
      example: ArgoCD application has been created
    BckndArgoCDApplicationModificationResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BckndId'
        message:
          $ref: '#/components/schemas/BckndArgoCDApplicationModificationResponseMessage'
      required:
        - id
        - message
    BckndArgoCDApplicationModificationResponseMessage:
      type: string
      description: Message
      example: ArgoCD application has been updated
    BckndArgoCDApplicationRefreshResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/BckndId'
        message:
          $ref: '#/components/schemas/BckndArgoCDApplicationRefreshResponseMessage'
      required:
        - id
        - message
    BckndArgoCDApplicationRefreshResponseMessage:
      type: string
      description: Message
      example: Refresh of ArgoCD application has been scheduled
    BckndServiceList:
      type: object
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/BckndService'
      required:
        - count
        - resources
    BckndService:
      type: object
      properties:
        name:
          description: service name
          type: string
        description:
          description: service description
          type: string
        url:
          description: service broker url
          type: string
        status:
          description: aggregated status of the service
          type: string
          enum:
            - PROVISIONED
            - ERROR
            - PROVISIONING
            - DEPROVISIONING
        statusMessage:
          description: status message
          type: string
    BckndExtendedService:
      type: object
      properties:
        name:
          description: service name
          type: string
        description:
          description: service description
          type: string
        url:
          description: service broker url
          type: string
        brokerSecret:
          $ref: '#/components/schemas/BckndServiceBrokerSecret'
        capabilities:
          $ref: '#/components/schemas/BckndServiceCapabilities'
        serviceCatalog:
          $ref: '#/components/schemas/BckndServiceServiceCatalog'
        status:
          description: aggregated status of the service
          type: string
          enum:
            - PROVISIONED
            - ERROR
            - PROVISIONING
            - DEPROVISIONING
        statusMessage:
          description: status message
          type: string
    BckndServiceBrokerSecret:
      type: object
      properties:
        name:
          description: broker secret name
          type: string
        passwordKeyRef:
          description: username key reference in broker secret
          type: string
        usernameKeyRef:
          description: password key reference in broker secret
          type: string
    BckndServiceCapabilities:
      type: object
      properties:
        logs:
          description: Capabilities to read logs from deployments and executions.
          type: object
          properties:
            deployments:
              type: boolean
            executions:
              type: boolean
        basic:
          description: Basic capabilities like creating deployments and executions.
          type: object
          properties:
            staticDeployments:
              description:
                There are static always running endpoints that can be used
                for inference without the need to do user deployments.
              type: boolean
            userDeployments:
              description:
                Services that only support batch inference typically neither
                allow listing nor creation of deployments. For these, userDeployments
                == false
              type: boolean
            createExecutions:
              description:
                Services that only support deployment typically neither
                allow create executions. For these, createExecutions == false
              type: boolean
            multitenant:
              description:
                true-> AI API implementation supports resource groups (Main
                Tenant scenario), false-> implementation does not support resource
                groups (Service Tenant scenario)
              type: boolean
    BckndServiceServiceCatalog:
      type: array
      items:
        $ref: '#/components/schemas/BckndServiceServiceCatalogItem'
    BckndServiceServiceCatalogItem:
      type: object
      properties:
        extendCatalog:
          $ref: '#/components/schemas/BckndServiceServiceCatalogItemExtendCatalog'
        extendCredentials:
          $ref: '#/components/schemas/BckndServiceServiceCatalogItemExtendCredentials'
    BckndServiceServiceCatalogItemExtendCatalog:
      type: object
      properties:
        bindable:
          description: if the service is bindable
          type: boolean
        description:
          description: description of the service
          type: string
        id:
          description: id of the service
          type: string
        name:
          description: name of the service
          type: string
        plans:
          type: array
          items:
            $ref: '#/components/schemas/BckndServiceServicePlanItem'
    BckndServiceServicePlanItem:
      type: object
      properties:
        description:
          description: description of the service plan
          type: string
        free:
          description: if the service plan free
          type: boolean
        id:
          description: id of the service plan
          type: string
        name:
          description: name of the service plan
          type: string
        metadata:
          $ref: '#/components/schemas/BckndServiceServicePlanItemMetadata'
    BckndServiceServicePlanItemMetadata:
      type: object
      properties:
        supportedPlatforms:
          description: supported platforms of the service plan
          type: array
          items:
            type: string
            enum:
              - cloudfoundry
              - kubernetes
              - sapbtp
    BckndServiceServiceCatalogItemExtendCredentials:
      type: object
      properties:
        shared:
          type: object
          properties:
            serviceUrls:
              type: object
              properties:
                AI_API_URL:
                  type: string
    BckndDeploymentResourceQuotaResponse:
      type: object
      required:
        - quotas
      properties:
        usage:
          $ref: '#/components/schemas/BckndDeploymentUsage'
        quotas:
          type: array
          items:
            $ref: '#/components/schemas/BckndDeploymentQuotaItem'
    BckndDeploymentUsage:
      type: object
      required:
        - count
        - items
      properties:
        count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/BckndUsageResourcePlanItem'
    BckndUsageResourcePlanItem:
      type: object
      required:
        - id
      properties:
        id:
          type: string
        resourcePlanType:
          type: string
        configuredMaxReplicas:
          type: integer
    BckndDeploymentQuotaItem:
      type: object
      properties:
        resourcePlanType:
          type: string
        deploymentQuota:
          $ref: '#/components/schemas/BckndDeploymentQuota'
    BckndDeploymentQuota:
      type: object
      properties:
        maxCount:
          type: integer
          description:
            The value can be 0(disabled) or a positive integer defining
            the maximum allowed number
          example: 10
        maxReplicaPerDeployment:
          type: integer
    BckndCommonResourceQuotaResponse:
      type: object
      required:
        - quota
      properties:
        usage:
          type: object
          properties:
            count:
              type: integer
        quota:
          type: object
          properties:
            maxCount:
              type: integer
              description:
                The value can be 0(disabled) or a positive integer defining
                the maximum allowed number
              example: 10
    BckndExecutableResourceQuotaResponse:
      type: object
      required:
        - quota
      properties:
        usage:
          type: object
          properties:
            servingTemplateCount:
              type: integer
            workflowTemplateCount:
              type: integer
        quota:
          type: object
          properties:
            servingTemplateMaxCount:
              type: integer
              description:
                The value can be 0(disabled) or a positive integer defining
                the maximum allowed number
              example: 10
            workflowTemplateMaxCount:
              type: integer
              description:
                The value can be 0(disabled) or a positive integer defining
                the maximum allowed number
              example: 10
    BckndResourcePatchBody:
      type: object
      required:
        - resourcePlans
      properties:
        resourcePlans:
          $ref: '#/components/schemas/BckndResourcePatchResourcePlans'
    BckndResourcePatchResourcePlans:
      type: array
      items:
        $ref: '#/components/schemas/BckndResourcePatchNodes'
    BckndResourcePatchNodes:
      type: object
      required:
        - name
        - request
      properties:
        name:
          type: string
        request:
          type: integer
    BckndResourcePatchResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    BckndResourceGetResponse:
      type: object
      required:
        - resourcePlans
      properties:
        resourcePlans:
          $ref: '#/components/schemas/BckndResourceGetResourcePlans'
    BckndResourceGetResourcePlans:
      type: object
      additionalProperties:
        type: object
        required:
          - provisioned
          - requested
        properties:
          provisioned:
            type: integer
          requested:
            type: integer
    BckndErrorResponse:
      type: object
      properties:
        error:
          $ref: '#/components/schemas/BckndError'
    BckndError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Descriptive error code (not http status code)
        message:
          type: string
          description: Plaintext error description
          example: something went wrong
        requestId:
          type: string
          description: ID of the individual request
        target:
          type: string
          description: Invoked URL
        details:
          description: Optional details of the error message
          type: object
    TrckGetMetricResource:
      description:
        Collection of various metrics/tags/labels associated against some
        execution/deployment
      type: object
      properties:
        executionId:
          $ref: '#/components/schemas/TrckExecutionId'
        metrics:
          $ref: '#/components/schemas/TrckGetMetricList'
        tags:
          $ref: '#/components/schemas/TrckTagList'
        customInfo:
          $ref: '#/components/schemas/TrckCustomInfoObjectList'
      required:
        - executionId
    TrckMetricResource:
      description:
        Collection of various metrics/tags/labels associated against some
        execution/deployment
      required:
        - executionId
      type: object
      properties:
        executionId:
          $ref: '#/components/schemas/TrckExecutionId'
        metrics:
          $ref: '#/components/schemas/TrckMetricList'
        tags:
          $ref: '#/components/schemas/TrckTagList'
        customInfo:
          $ref: '#/components/schemas/TrckCustomInfoObjectList'
    TrckGetMetricResourceList:
      type: object
      required:
        - resources
      properties:
        count:
          type: integer
          description: Number of the resource instances in the list
        resources:
          type: array
          items:
            $ref: '#/components/schemas/TrckGetMetricResource'
    TrckDeleteMetricsResponse:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/TrckExecutionId'
        message:
          type: string
          example: Metric Resource was successfully deleted
    TrckExecutionId:
      type: string
      example: aa97b177-9383-4934-8543-0f91b7a0283a
      oneOf:
        - $ref: '#/components/schemas/TrckMlapiExecutionId'
      description: ID of the deployment/execution
    TrckTimestamp:
      type: string
      description: Time when the metric was created or logged in RFC3339 format
      format: date-time
    TrckGetMetricList:
      description: Array of Metric items
      type: array
      items:
        $ref: '#/components/schemas/TrckGetMetric'
    TrckMetricList:
      description: Array of Metric items
      type: array
      items:
        $ref: '#/components/schemas/TrckMetric'
    TrckGetMetric:
      description:
        Key-value metrics, where the value is numeric. Metric can also
        have optional step and label fields.
      type: object
      required:
        - name
        - value
        - timestamp
      properties:
        name:
          $ref: '#/components/schemas/TrckMetricName'
        value:
          $ref: '#/components/schemas/TrckMetricValue'
        timestamp:
          $ref: '#/components/schemas/TrckTimestamp'
        step:
          description:
            step is an optional integer that represents any measurement
            of training progress (number of training iterations, number of epochs,
            and so on) for the metric
          type: integer
          minimum: 0
          example: 2
        labels:
          $ref: '#/components/schemas/TrckLabelList'
    TrckMetric:
      description:
        Key-value metrics, where the value is numeric. Metric can also
        have optional step and label fields.
      required:
        - name
        - value
      type: object
      properties:
        name:
          $ref: '#/components/schemas/TrckMetricName'
        value:
          $ref: '#/components/schemas/TrckMetricValue'
        timestamp:
          $ref: '#/components/schemas/TrckTimestamp'
        step:
          description:
            step is an optional integer that represents any measurement
            of training progress (number of training iterations, number of epochs,
            and so on) for the metric
          type: integer
          minimum: 0
          example: 2
        labels:
          $ref: '#/components/schemas/TrckLabelList'
    TrckMetricName:
      pattern: '[\w-]{1,64}'
      type: string
      maxLength: 256
      description: Name of the metric
      example: Error Rate
    TrckMetricValue:
      type: number
      description: Numeric Value of the metric
      example: 0.98
    TrckmetricSelectorPermissibleValues:
      description:
        Permissible value for $select could be either * or one or many
        of the values from metrics, tags, custominfo
      type: array
      items:
        type: string
        enum:
          - metrics
          - tags
          - customInfo
          - '*'
    TrckLabelList:
      description: a list of name-value object pairs associated with some metric.
      type: array
      items:
        $ref: '#/components/schemas/TrckLabel'
      example:
        - name: group
          value: tree-82
        - name: metrics.ai.sap.com/Artifact.name
          value: sk_learn_rf_classifier_model
    TrckLabel:
      description: a classifying phrase/name applied to a metric
      required:
        - name
        - value
      type: object
      properties:
        name:
          $ref: '#/components/schemas/TrckLabelName'
        value:
          description: Metric Label Value
          maxLength: 256
          minLength: 1
          type: string
          example: sk_learn_random_forest_model
      example:
        name: group
        value: tree-82
    TrckTagList:
      description:
        a list of name-value object pairs associated with the execution/deployment.
        Tags are queryable.
      type: array
      items:
        $ref: '#/components/schemas/TrckTag'
    TrckTag:
      description:
        A dictionary of name-value pairs to support segregation at execution
        level.
      required:
        - name
        - value
      type: object
      properties:
        name:
          oneOf:
            - $ref: '#/components/schemas/TrckGenericName'
        value:
          description: tag value
          maxLength: 256
          minLength: 1
          type: string
          example: RFC-1
      example:
        name: Artifact Group
        value: RFC-1
    TrckCustomInfoObjectList:
      description: ''
      type: array
      items:
        $ref: '#/components/schemas/TrckCustomInfoObject'
    TrckCustomInfoObject:
      description:
        large object which provides rendering/semantic information regarding
        certain metric for consuming application or can be complex metrics in JSON
        format
      required:
        - name
        - value
      type: object
      properties:
        name:
          oneOf:
            - $ref: '#/components/schemas/TrckGenericName'
        value:
          $ref: '#/components/schemas/TrckCustomInfoObjectData'
      example:
        name: Confusion Matrix
        value:
          "[{'Predicted': 'False',  'Actual': 'False','value': 34},{'Predicted':
          'False','Actual': 'True',  'value': 124}, {'Predicted': 'True','Actual':
          'False','value': 165},{  'Predicted': 'True','Actual': 'True','value':
          36}]"
    TrckCustomInfoObjectData:
      description: Message
      minLength: 1
      type: string
      example:
        "[{'Predicted': 'False',\t'Actual': 'False','value': 34},{'Predicted':
        'False','Actual': 'True',\t'value': 124}, {'Predicted': 'True','Actual': 'False','value':
        165},{\t'Predicted': 'True','Actual': 'True','value': 36}]"
    TrckMlapiExecutionId:
      description: Generic ID
      pattern: ^[\w.-]{4,64}$
      type: string
      example: aa97b177-9383-4934-8543-0f91b7a0283a
    TrckGenericName:
      description:
        Generic name which can belong to a tag,label,metric or customInfo
        Object
      maxLength: 256
      minLength: 1
      type: string
      example: sample name
    TrckLabelName:
      description:
        Label name to label one or more metrics. "metrics.ai.sap.com/Artifact.name"
        is a reserved label to associate an artifact with the metrics
      maxLength: 256
      minLength: 1
      type: string
      example: metrics.ai.sap.com/Artifact.name
    TrckApiError:
      required:
        - code
        - message
      type: object
      properties:
        code:
          description: Descriptive error code (not http status code).
          type: string
        message:
          description: plaintext error description
          type: string
        requestId:
          description: id of individual request
          type: string
        target:
          description: url that has been called
          type: string
        details:
          type: array
          items:
            $ref: '#/components/schemas/TrckDetailsErrorResponse'
    TrckDetailsErrorResponse:
      type: object
      properties:
        code:
          description: Descriptive error code (not http status code)
          type: string
        message:
          description: Plaintext error description
          type: string
    TrckStringArray:
      type: array
      example:
        - value1
        - value2
      items:
        type: string
    MetaCapabilities:
      type: object
      required:
        - aiApi
      properties:
        runtimeIdentifier:
          type: string
          example: aicore
          description: The name of the runtime
        runtimeApiVersion:
          $ref: '#/components/schemas/MetaVersion'
        description:
          type: string
        aiApi:
          $ref: '#/components/schemas/MetaAiApi'
        extensions:
          $ref: '#/components/schemas/MetaExtensions'
    MetaExtensions:
      type: object
      properties:
        analytics:
          type: object
          required:
            - version
          properties:
            version:
              $ref: '#/components/schemas/MetaVersion'
        resourceGroups:
          type: object
          required:
            - version
          properties:
            version:
              $ref: '#/components/schemas/MetaVersion'
        dataset:
          type: object
          properties:
            version:
              $ref: '#/components/schemas/MetaVersion'
            capabilities:
              description: List of Dataset extension capabilities
              type: object
              properties:
                upload:
                  description: Support for uploading of files
                  type: boolean
                  default: true
                download:
                  description: Support for downloading of files
                  type: boolean
                  default: true
                delete:
                  description: Support for deletion of files
                  type: boolean
                  default: true
            limits:
              type: object
              properties:
                maxUploadFileSize:
                  type: integer
                  description:
                    Max size (in bytes) of a single uploaded file allowed
                    by this runtime per resource group.
                  default: 104857600
                maxFilesPerDataset:
                  description: Max number of files per dataset. <0 means unlimited.
                  type: integer
                  default: -1
                acceptedContentTypes:
                  type: array
                  items:
                    type: string
                    pattern: ^\w+\/([\w+-]\.)?[\w.-]+(\+[\w-]+)*$
          required:
            - version
        metrics:
          type: object
          properties:
            version:
              $ref: '#/components/schemas/MetaVersion'
            capabilities:
              description: List of Metrics extension capabilities
              type: object
              properties:
                extendedResults:
                  description: Support for returning extended results
                  type: boolean
                  default: false
          required:
            - version
    MetaAiApi:
      description:
        There are (currently) the following types of execution engines  1)
        complete runtimes that offer executions and deployments, 2) runtimes that
        do only batch inference and therefore don't support deployments 3) runtimes
        that allow deployments, but with predefined models and therefore don't need
        executions 4) runtimes that have fixed endpoints and therefore only need listing
        deployments
      type: object
      properties:
        version:
          $ref: '#/components/schemas/MetaVersion'
        capabilities:
          type: object
          properties:
            multitenant:
              type: boolean
              description:
                true-> AI API implementation supports resource groups (Main
                Tenant scenario), false-> implementation does not support resource
                groups (Service Tenant scenario)
              default: true
            shareable:
              type: boolean
              description:
                true-> clients can use just one instance (global static
                models), false-> clients should avoid sharing an instance
              default: true
            staticDeployments:
              type: boolean
              description:
                There are static always running endpoints that can be used
                for inference without the need to do user deployments.
              default: true
            userDeployments:
              type: boolean
              description:
                Services that only support batch inference typically neither
                allow listing nor creation of deployments. For these, userDeployments
                == false
              default: true
            userExecutions:
              type: boolean
              default: true
            timeToLiveDeployments:
              type: boolean
              default: false
            executionSchedules:
              type: boolean
              default: false
            logs:
              type: object
              properties:
                executions:
                  type: boolean
                  default: true
                deployments:
                  type: boolean
                  default: true
            bulkUpdates:
              type: object
              description:
                Services that support patch on /executions and /deployments
                to change targetStatus of multiple executions and deployments.
              properties:
                executions:
                  type: boolean
                  default: false
                deployments:
                  type: boolean
                  default: false
        limits:
          type: object
          properties:
            executions:
              type: object
              properties:
                maxRunningCount:
                  description:
                    Max nr of executions allowed by this runtime per resource
                    group. <0 means unlimited.
                  type: integer
                  default: -1
            deployments:
              type: object
              properties:
                maxRunningCount:
                  description:
                    Max nr of deployments allowed by this runtime per resource
                    group. <0 means unlimited.
                  type: integer
                  default: -1
            timeToLiveDeployments:
              type: object
              properties:
                minimum:
                  type: string
                  default: 10m
                maximum:
                  type: string
                  default: '-1'
      required:
        - version
    MetaVersion:
      example: 1.2.3
      type: string
      pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$
    MetaAPIVersion:
      type: object
      properties:
        versionId:
          type: string
          description: API version identifier
          example: v1
        url:
          type: string
          description: URL of the API version
          example: https://api.example.com/v1
        description:
          type: string
          description: version description
          example: Example API
      description: API version description
    MetaApiError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Descriptive error code (not http status code)
        message:
          type: string
          description: Plaintext error description
        requestId:
          type: string
          description: ID of the individual request
        target:
          type: string
          description: Invoked URL
        details:
          description: Optional details of the error message
          type: object
    KpiColumnName:
      readOnly: true
      type: string
      description: Name of the Column
      anyOf:
        - enum:
            - ResourceGroup
            - Scenario
            - Executable
            - Executions
            - Artifacts
            - Deployments
        - {}
    KpiArrayOfColumnNames:
      uniqueItems: true
      type: array
      readOnly: true
      items:
        $ref: '#/components/schemas/KpiColumnName'
    KpiAggregationAttribute:
      type: string
      title: Aggregation Attribute
      readOnly: true
    KpiCountAggregate:
      type: integer
      title: CountAggregate
      format: int64
      minimum: 0
      x-examples: {}
      readOnly: true
    KpiResultRow:
      type: array
      title: ResultRow
      uniqueItems: false
      x-examples: {}
      description: ''
      items:
        $ref: '#/components/schemas/KpiResultRowItem'
      readOnly: true
    KpiResultRowItem:
      title: ResultRowItem
      anyOf:
        - $ref: '#/components/schemas/KpiAggregationAttribute'
        - $ref: '#/components/schemas/KpiCountAggregate'
      x-examples: {}
    KpiResultRowList:
      title: ResultRowList
      type: array
      items:
        $ref: '#/components/schemas/KpiResultRow'
    KpiResultSet:
      type: object
      title: ResultSet
      x-examples:
        example-1:
          header:
            - ResourceGroup
            - Executions
            - Artifacts
            - Deployments
          rows:
            - - 00112233-4455-6677-8899-aabbccddeeff
              - 30
              - 30
              - 3
      additionalProperties: false
      minProperties: 2
      maxProperties: 2
      properties:
        header:
          $ref: '#/components/schemas/KpiArrayOfColumnNames'
        rows:
          $ref: '#/components/schemas/KpiResultRowList'
      readOnly: true
    KpiApiError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Descriptive error code (not http status code)
        message:
          type: string
          description: Plaintext error description
        requestId:
          type: string
          description: ID of the individual request
        target:
          type: string
          description: Invoked URL
        details:
          description: Optional details of the error message
          type: object
  parameters:
    RTAtokenHeader:
      name: Authorization
      in: header
      description: Authorization bearer token containing a JWT token.
      required: false
      schema:
        type: string
    RTAlimit:
      in: query
      name: $top
      description:
        The max number of entries to return. Defaults to 1000. Limited
        to 5000 max.
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 5000
        default: 1000
      examples:
        min:
          value: 1
          summary: Min number of entries to return
        max:
          value: 5000
          summary: Max number of entries to return
        default:
          value: 1000
          summary: default number of entries to return
    RTAstart:
      name: start
      in: query
      description:
        The start time for the query as a RFC 3339 datetime format. Defaults
        to one hour ago. + in timezone need to be encoded to %2B.
      required: false
      schema:
        type: string
        format: date-time
      examples:
        zulu:
          value: '2021-05-19T00:00:14.347Z'
          summary: Datetime example use Z as timezone
        utc:
          value: 2021-05-19T00:00:14.347%2B00:00
          summary:
            Datetime example use +00:00 as timezone, where + is encoded to
            %2B
        local-plus:
          value: 2021-05-19T08:00:14.347%2B08:00
          summary:
            Datetime example use +08:00 as timezone, where + is encoded to
            %2B
        local-minus:
          value: '2021-05-18T16:00:14.347-08:00'
          summary: Datetime example use -08:00 as timezone
    RTAend:
      name: end
      in: query
      description:
        The end time for the query as a RFC 3339 datetime format. Defaults
        to now. + in timezone need to be encoded to %2B.
      required: false
      schema:
        type: string
        format: date-time
      examples:
        zulu:
          value: '2021-05-19T01:00:14.347Z'
          summary: Datetime example use Z as timezone
        utc:
          value: 2021-05-19T01:00:14.347%2B00:00
          summary:
            Datetime example use +00:00 as timezone, where + is encoded to
            %2B
        local-plus:
          value: 2021-05-19T09:00:14.347%2B08:00
          summary:
            Datetime example use +08:00 as timezone, where + is encoded to
            %2B
        local-minus:
          value: '2021-05-18T17:00:14.347-08:00'
          summary: Datetime example use -08:00 as timezone
    RTAorder:
      name: $order
      in: query
      description:
        "Determines the sort order. Supported values are asc or desc. Defaults
        to asc. Sort order:\n  * `asc` - Ascending, earliest in the order will appear
        at the top of the list\n  * `desc` - Descending, last in the order will appear
        at the top of the list\n"
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
      examples:
        asc:
          value: asc
          summary: Sort the results in ascending order
        desc:
          value: desc
          summary: Sort the results in descending order
    RTAexecutionId:
      name: executionId
      description: Execution identifier
      in: path
      required: true
      schema:
        type: string
        pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    RTAdeploymentId:
      name: deploymentId
      description: Deployment identifier
      in: path
      required: true
      schema:
        type: string
        pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    DSetresourceGroupHeader:
      in: header
      name: AI-Resource-Group
      description: Specify a resource group id
      schema:
        type: string
      required: false
    DSetpath:
      name: path
      in: path
      required: true
      schema:
        type: string
        format: path
        pattern: ^(([\w.-]+):([\w.-]+)|([\w.-]+))(/([\w./-]+[\w.-]+)?)?$
        maxLength: 1024
      description: path relative to the object store root URL in the secret
    DSetoverwrite:
      name: overwrite
      in: query
      required: false
      schema:
        type: boolean
      description: If true, then file is overwritten. Default is false.
    AiresourceGroupHeader:
      in: header
      name: AI-Resource-Group
      description: Specify a resource group id
      schema:
        type: string
      required: true
    AiscenarioId:
      name: scenarioId
      description: Scenario identifier
      in: path
      required: true
      schema:
        type: string
        pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    AiqueryScenarioId:
      name: scenarioId
      description: Scenario identifier
      in: query
      required: false
      schema:
        type: string
        pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    AiquerySearch:
      name: $search
      description: Generic search term to be looked for in various attributes
      in: query
      required: false
      schema:
        type: string
        pattern: ^[^~]{1,80}$
      example: onfigur
    AiquerySearchCaseInsensitive:
      name: searchCaseInsensitive
      description: indicates whether the search should be case insensitive
      in: query
      required: false
      schema:
        type: boolean
        default: false
      example: true
    AiversionIdQueryParam:
      name: versionId
      in: query
      required: false
      schema:
        type: string
      description: Version ID, if defined - returns the specified version
    AiexecutableIdsList:
      name: executableIds
      in: query
      description: Limit query to only these executable IDs
      schema:
        type: array
        items:
          type: string
          pattern: ^[\w.-]{4,64}$
        maxItems: 1000
      style: form
      explode: false
    AiexecutableId:
      name: executableId
      description: Executable identifier
      in: path
      required: true
      schema:
        type: string
        pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    AiconfigurationId:
      name: configurationId
      description: Configuration identifier
      in: path
      required: true
      schema:
        type: string
        pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    AiqueryConfigurationId:
      name: configurationId
      description: Configuration identifier
      in: query
      required: false
      schema:
        type: string
        pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    AiexecutionId:
      name: executionId
      description: Execution identifier
      in: path
      required: true
      schema:
        type: string
        pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    AiexecutionScheduleId:
      name: executionScheduleId
      description: Execution Schedule identifier
      in: path
      required: true
      schema:
        type: string
        pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    AiqueryExecutionScheduleId:
      name: executionScheduleId
      description: Execution Schedule identifier
      in: query
      required: false
      schema:
        type: string
        pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    AiqueryExecutionScheduleStatus:
      name: status
      description: Execution Schedule status
      in: query
      required: false
      schema:
        type: string
        enum:
          - ACTIVE
          - INACTIVE
      example: ACTIVE
    AiqueryExecutionId:
      name: executionId
      description: Execution identifier
      in: query
      required: false
      schema:
        type: string
        pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    AideploymentId:
      name: deploymentId
      description: Deployment identifier
      in: path
      required: true
      schema:
        type: string
        pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    AiartifactId:
      name: artifactId
      description: Artifact identifier
      in: path
      required: true
      schema:
        type: string
        pattern: ^[\w.-]{4,64}$
      example: aa97b177-9383-4934-8543-0f91a7a0283a
    AiqueryArtifactName:
      name: name
      description: Artifact name
      in: query
      required: false
      schema:
        type: string
        allOf:
          - $ref: '#/components/schemas/AiArtifactName'
      example: inception
    AiqueryArtifactKind:
      name: kind
      description: Kind of the artifact
      in: query
      required: false
      schema:
        type: string
        enum:
          - model
          - dataset
          - resultset
          - other
      example: model
    AilabelSelector:
      in: query
      name: labelSelector
      description:
        'filter by labels. Pass in expressions in the form of "key=value"
        or "key!=value" separated by commas and the result will be filtered to only
        those resources that have labels that match all provided expressions (i.e.
        logical AND)

        '
      schema:
        type: array
        minItems: 1
        items:
          type: string
          pattern: ^ext\.ai\.sap\.com\/[\w\.-]+!?=[^ =,]+$
          maxLength: 5000
      example: ext.ai.sap.com/key1=value1,ext.ai.sap.com/key2!=value2
      style: form
      explode: false
      required: false
    AiartifactLabelSelector:
      in: query
      name: artifactLabelSelector
      description:
        'Filter artifact by labels. Pass in expressions in the form of
        "key=value" or "key!=value" separated by commas and the result will be filtered
        to only those resources that have labels that match all provided expressions
        (i.e. logical AND). The maximum number of labels permitted for filtering is
        10. Special handling is required when using comma in the value field. This
        is because commas are also used as a separator for  multiple "key=value" entries.
        Therefore, if the value contains a comma, then replace this with the string
        "{comma}" in the value field.

        '
      schema:
        type: array
        minItems: 1
        maxItems: 10
        items:
          type: string
          pattern: ^ext\.ai\.sap\.com\/[\w\.-]+!?=[^ =,]+$
          maxLength: 5000
      example: ext.ai.sap.com/key1=value1,ext.ai.sap.com/key2!=value2
      style: form
      explode: false
      required: false
    Aistatus:
      name: status
      description: Filter by status
      in: query
      required: false
      schema:
        type: string
        enum:
          - PENDING
          - RUNNING
          - COMPLETED
          - DEAD
          - STOPPING
          - STOPPED
          - UNKNOWN
      example: RUNNING
    Aitop:
      name: $top
      description: Number of results to display
      in: query
      required: false
      schema:
        type: integer
        maximum: 100000
        default: 10000
      example: 10
      x-visible: false
    Aiskip:
      name: $skip
      description: Number of results to be skipped from the ordered list of results
      in: query
      required: false
      schema:
        type: integer
      example: 10
      x-visible: false
    AiqueryConfigurationExpand:
      name: $expand
      description: expand detailed information on scenario
      in: query
      required: false
      schema:
        type: string
        enum:
          - scenario
      example: scenario
      x-visible: false
    AiqueryArtifactExpand:
      name: $expand
      description: expand detailed information on scenario
      in: query
      required: false
      schema:
        type: string
        enum:
          - scenario
      example: scenario
      x-visible: false
    Aiselect:
      name: $select
      description: Allows to request a specified set of properties for each entity
      in: query
      required: false
      schema:
        type: string
        enum:
          - status
      example: status
      x-visible: false
    BckndtokenHeader:
      name: Authorization
      in: header
      description: Authorization bearer token containing a JWT token.
      required: false
      schema:
        type: string
    Bckndai-resource-group:
      name: AI-Resource-Group
      in: header
      description: Specify an existing resource group id to use
      required: false
      schema:
        type: string
    Bckndai-resource-group-default:
      name: AI-Resource-Group
      in: header
      description:
        Specify an existing resource group id to use. Uses "default" if
        value not provided.
      required: false
      schema:
        type: string
        default: default
    Bckndai-tenant-scope:
      name: AI-Tenant-Scope
      in: header
      description: Specify whether the main tenant scope is to be used
      required: false
      schema:
        type: boolean
      example: true
    Bckndtop:
      name: $top
      description: Number of results to display
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
      example: 10
    Bckndskip:
      name: $skip
      description: Number of results to be skipped from the ordered list of results
      in: query
      required: false
      schema:
        type: integer
        minimum: 0
      example: 10
    Bckndcount:
      name: $count
      description:
        When the $count field is set to false, the response contains a
        count of the items present in the response. When the $count field is set to
        true, the response contains a count of all the items present on the server,
        and not just the ones in the response. When the $count field is not passed,
        it is false by default.
      in: query
      required: false
      schema:
        type: boolean
      example: true
    BckndresourceGroupId:
      name: resourceGroupId
      description: Resource group identifier
      in: path
      required: true
      schema:
        type: string
        pattern: ^[a-zA-Z0-9][a-zA-Z0-9.-]{1,251}[a-zA-Z0-9]$
        minLength: 3
        maxLength: 253
      example: my-test-rg
    BckndobjectStoreName:
      name: objectStoreName
      description: Name of the object store for the secret.
      in: path
      required: true
      schema:
        type: string
        pattern: ^[a-zA-Z0-9\.\-_]+$
      example: My_objectStore
    BcknddockerRegistryName:
      name: dockerRegistryName
      description: Name of the docker Registry store for the secret.
      in: path
      required: true
      schema:
        type: string
        pattern: ^[a-z0-9](?:_?[a-z0-9\.\-]+)*[a-z0-9]$
        maxLength: 63
      example: mydockeregistry
    BckndsecretName:
      name: secretName
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 252
        pattern: ^[a-z0-9\-\.]+$
    BckndrepositoryName:
      name: repositoryName
      description: Name of the repository
      in: path
      required: true
      schema:
        type: string
        minLength: 1
        maxLength: 51
        pattern: ^[a-z0-9\-]+$
      example: tenant-application
    BckndapplicationName:
      name: applicationName
      description: Name of the ArgoCD application
      in: path
      required: true
      schema:
        type: string
        minLength: 3
        maxLength: 54
        pattern: ^[a-z0-9\-]+$
      example: tenant-application
    BckndServiceName:
      name: ServiceName
      description: Name of the Service
      in: path
      required: true
      schema:
        type: string
        pattern: ^[a-zA-Z0-9\-_]+$
        minLength: 1
        maxLength: 32
      example: cashapp
    BckndquotaOnly:
      name: quotaOnly
      description:
        When being set to true, the response contains only the quota of
        the resource and not the quota usage.
      in: query
      required: false
      schema:
        type: boolean
      example: true
    TrckqueryFilter:
      example: executionId eq 'aa97b177-9383-4934-8543-0f91b7a0283a'
      name: $filter
      description:
        Filter parameter allows filtering of metric resource using ExecutionId(s).
        User can only use in, eq operators in filter expression.
      schema:
        type: string
      in: query
      required: false
      deprecated: true
    TrckexecutionIds:
      example: executionIds=aa97b177-9383-4934-8543-0f91b7a0283a,aa97b177-9383-4934-8543-0f91b7a0283b
      name: executionIds
      description:
        executionIds parameter allows filtering of metric resource using
        single or multiple ExecutionId(s).
      schema:
        $ref: '#/components/schemas/TrckStringArray'
      in: query
      style: form
      required: false
      explode: false
    TrckmetricAttributeSelector:
      examples:
        selectAll:
          value: $select=*
        selectSpecific:
          value: $select=metrics,customInfo
      name: $select
      description:
        returns only the resources that the client explicitly requests.
        User can also pass * as a value for $select,  which will behave same as that
        of not passing $select query param.
      schema:
        $ref: '#/components/schemas/TrckmetricSelectorPermissibleValues'
      in: query
      style: form
      required: false
      explode: false
    TrckexecutionId:
      name: executionId
      description: The Id of an execution
      schema:
        $ref: '#/components/schemas/TrckExecutionId'
      in: query
      required: true
    TrcktrackingResourceGroupHeader:
      name: AI-Resource-Group
      description: Specify a resource group id
      in: header
      schema:
        type: string
      required: true
    KpiquerySelect:
      name: $select
      description: Columns to select
      in: query
      required: false
      schema:
        uniqueItems: true
        type: array
        readOnly: true
        default:
          - ResourceGroup
          - Executions
          - Artifacts
          - Deployments
        items:
          $ref: '#/components/schemas/KpiColumnName'
      style: form
      explode: false
  responses:
    RTANotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RTAErrorResponse'
    RTABadRequest:
      description: The request was malformed and could thus not be processed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RTAErrorResponse'
    RTACommonError:
      description:
        HTTP status codes 401, 403 or 500. Response body contains further
        details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RTAErrorResponse'
    RTAUnauthorized:
      description: Lacks valid authentication credentials for the target resource.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RTAErrorResponse'
    DSetBadRequest:
      description: The specification of the resource was incorrect
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/DSetError'
          example:
            error:
              code: '03021655'
              message: Bad request encountered. Please try again with possible-solution-here.
              target: /url/path
              requestId: 9832bf934f3743v3948v3
              details:
                - code: '01041211'
                  message: Optional nested error message.
    DSetNotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/DSetError'
          example:
            error:
              code: '03021655'
              message:
                The resource you requested was not found. Please try again
                with possible-solution-here.
              target: /url/path
              requestId: 9832bf934f3743v3948v3
              details:
                - code: '01041211'
                  message: Optional nested error message.
    DSetConflict:
      description: The specified file already exists and cannot be overwritten.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/DSetError'
          example:
            error:
              code: '03021655'
              message:
                The specified file already exists and cannot be overwritten.
                Please try again with possible-solution-here.
              target: /url/path
              requestId: 9832bf934f3743v3948v3
              details:
                - code: '01041211'
                  message: Optional nested error message.
    DSetRequestTooLarge:
      description: The file size exceeds the supported limit.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/DSetError'
          example:
            error:
              code: '03021655'
              message: The file size exceeds the supported limit.
              target: /url/path
              requestId: 9832bf934f3743v3948v3
              details:
                - code: '01041211'
                  message: Optional nested error message.
    DSetSuccess:
      description: The request was processed successfully.
    DSetFileContent:
      description: OK
      headers:
        X-Content-Type-Options:
          schema:
            type: string
          description: as per SEC-228 value should always be "nosniff"
          required: true
        Content-Security-Policy:
          schema:
            type: string
          description:
            as per SEC-228 value should always be "default-src 'none';
            sandbox"
          required: true
        Content-Disposition:
          schema:
            type: string
          description: as per SEC-228 value should always be "attachment"
          required: true
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    DSetFileCreated:
      description: Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DSetFileCreationResponse'
      headers:
        Location:
          description:
            URL of the newly created file. This URL can be passed on to
            the artifact API to register this file.
          schema:
            $ref: '#/components/schemas/DSetUrl'
    AiNotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/AiApiError'
    AiPreconditionFailed:
      description:
        The service didn't meet the precondition needed to execute this
        operation
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/AiApiError'
    AiBadRequest:
      description: The specification of the resource was incorrect
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/AiApiError'
    BckndCommonError:
      description:
        HTTP status codes 401, 403 or 500. Response body contains further
        details.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BckndErrorResponse'
    BckndNotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BckndErrorResponse'
    BckndBadRequest:
      description: The request was malformed and could thus not be processed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BckndErrorResponse'
    TrckBadRequest:
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/TrckApiError'
      description: The specification of the resource was incorrect
    TrckNotImplemented:
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/TrckApiError'
      description: Operation is not Supported.
    TrckNotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/TrckApiError'
    TrckPayloadTooLarge:
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/TrckApiError'
      description: request entity is larger than limits defined by server.
    MetaNotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/MetaApiError'
    KpiNotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/KpiApiError'
    KpiTooManyRequests:
      description: Too many requests
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/KpiApiError'
    KpiInvalidRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                $ref: '#/components/schemas/KpiApiError'
